- article: https://karpathy.github.io/2019/04/25/recipe/
- course: pragmatic data science https://www.youtube.com/playlist?list=PLjxbCynJ0Gd8k75-zdMcqcEbH90jfk9eg
- article: llm agent https://tadeodonegana.com/posts/building-agents-my-notes/
- DataSets
  - https://en.wikipedia.org/wiki/List_of_datasets_for_machine-learning_research
  - https://en.wikipedia.org/wiki/Iris_flower_data_set
  - https://en.wikipedia.org/wiki/MNIST_database
  - https://en.wikipedia.org/wiki/ImageNet
  - https://github.com/several27/FakeNewsCorpus

- deep learning https://www.youtube.com/playlist?list=PLoROMvodv4rPOWA-omMM6STXaWW4FvJT8
- https://github.com/AudioLLMs/AudioLLM
- Course: Introduction to ML https://www.youtube.com/playlist?list=PLuh62Q4Sv7BUhFs1KpeVctFmOYpTTxj33
- Course: intro for probability for cs https://www.youtube.com/playlist?list=PLoROMvodv4rOpr_A7B9SriE_iZmkanvUg
- Course: zero to neural networks https://www.youtube.com/@datacorelinux/videos
- https://microsoft.github.io/generative-ai-for-beginners/#/
- books https://github.com/aridiosilva/AI_Books/
- https://uvadlc-notebooks.readthedocs.io/en/latest/index.html
- Course: Neural Networks https://karpathy.ai/zero-to-hero.html
  - Neural Networks: Zero to Hero  https://www.youtube.com/playlist?list=PLAqhIrjkxbuWI23v9cThsA9GvCAUhRvKZ
- Video:  How to Create a Neural Network (and Train it to Identify Doodles)
  https://www.youtube.com/watch?v=hfMk-kjRv4c
- MIT 6.S191 Introduction to Deep Learning https://www.youtube.com/playlist?list=PLtBw6njQRU-rwp5__7C0oIVt26ZgjG9NI
- MIT Self Driving Lectures https://www.youtube.com/playlist?list=PLrAXtmErZgOeY0lkVCIVafdGFOTi45amq
- https://stackoverflow.blog/2022/04/21/the-robots-are-coming-for-the-boring-parts-of-your-job/?cb=1
- Standford Machine Learning Andrew NG https://www.youtube.com/watch?v=jGwO_UgTS7I&list=PLoROMvodv4rMiGQp3WXShtMGgzqpfVfbU&index=1
- Course: 2020 Cornell CS 5787: Applied Machine Learning.
  https://www.youtube.com/playlist?list=PL2UML_KCiC0UlY7iCQDSiGDMovaupqc83
- NN https://www.youtube.com/playlist?list=PLZHQObOWTQDNU6R1_67000Dx_ZCJB-3pi
- MIT RES.LL-005 Mathematics of Big Data and Machine Learning, IAP 2020
  https://www.youtube.com/watch?v=t4K6lney7Zw
- Video: Information Thoery, Pattern Recognition, and Neural Networks
  https://www.youtube.com/playlist?list=PLruBu5BI5n4aFpG32iMbdWoRVAA-Vcso6
- https://www.youtube.com/user/mathematicalmonk/videos
- Video Channel
  https://www.youtube.com/c/ShashankKalanithiData/videos
- Video: Conal Elliott: Can Tensor Programming Be Liberated from the Fortran Data Paradigm?
  https://www.youtube.com/watch?v=oaIMMclGuog
  https://github.com/conal/talk-2021-can-tensor-programming-be-liberated
- Deep Learning Book Lectures https://www.youtube.com/c/AlenaKruchkova/videos
- MIT http://introtodeeplearning.com/
  https://www.youtube.com/playlist?list=PLtBw6njQRU-rwp5__7C0oIVt26ZgjG9NI
- (Welch Labs) Neural Networks Demystified https://www.youtube.com/playlist?list=PLiaHhY2iBX9hdHaRr6b7XevZtgZRa1PoU
- http://karpathy.github.io/neuralnets/
- Andrew Ng https://www.coursera.org/learn/machine-learning
- CS231n: Convolutional Neural Networks for Visual Recognition http://vision.stanford.edu/teaching/cs231n/
- https://twitter.com/cfiesler/status/1336317217034612737
  Algorithms of Oppresion
  The Age of Surveillance Capitalism
  Race After Technology
  Weapons of Math Destruction
  Automating Inequality
  Technically Wrong
  Ghost Work
  Design Justice
- https://ml4code.github.io/papers.html
- https://medium.com/@satnalikamayank12/on-automated-generation-of-commit-messages-from-code-differences-7ab205ae580
- Deeplearning - Udacity - https://www.youtube.com/playlist?list=PLAwxTw4SYaPn_OWPFT9ulXLuQrImzHfOV
- https://www.edx.org/course/artificial-intelligence-for-everyone?source=aw&awc=6798_1596893433_4b4c0888ce9c6d92a5a2ae929d88d9c7&utm_source=aw&utm_medium=affiliate_partner&utm_content=text-link&utm_term=301045_https%3A%2F%2Fwww.class-central.com%2F
- [Coursera] Neural Networks for Machine Learning â€” Geoffrey Hinton
  https://www.youtube.com/playlist?list=PLoRl3Ht4JOcdU872GhiYWf6jwrk_SNhz9
- Vincent Warmerdam: Winning with Simple, even Linear, Models | PyData London 2018
  https://www.youtube.com/watch?v=68ABAU_V8qI
- https://github.com/mrdbourke/machine-learning-roadmap
- https://github.com/visenger/awesome-mlops
- CS50's Introduction to Artificial Intelligence with Python 2020
  https://www.youtube.com/playlist?list=PLhQjrBD2T382Nz7z1AEXmioc27axa19Kv
- NARDOZ MARZO - Fairness en Machine Learning + Testing en desarrollo de software
  https://www.youtube.com/watch?v=rrwrornKhjM
- https://github.com/mitmath/18337
- Toward ethical, transparent and fair AI/ML:
  a critical reading list for engineers, designers, and policy makers
  https://github.com/rockita/criticalML
- https://www.youtube.com/playlist?list=PLl8OlHZGYOQ7bkVbuRthEsaLr7bONzbXS
- Channel https://www.youtube.com/@vlavrenko/playlists
  - Neural Networls and Backpropagation https://www.youtube.com/watch?v=jZYz0EUPYBI&list=PLBv09BD7ez_4Bs9j3o8l_ZTjQZoN_3Oqs

* Channels
- Will Kwan https://www.youtube.com/c/WillKwan/videos
- Instituto de Calculo Secretaria https://www.youtube.com/channel/UCzcbeaNQEIhOFBRBdYx1NEA
- https://www.youtube.com/c/SirajRaval/videos
- https://www.youtube.com/c/YannicKilcher/videos
- https://www.youtube.com/user/MinisterioDeCiencia/videos
- https://www.youtube.com/channel/UCfxnrdBM1YRV9j2MB8aiy4Q
* Video: Practical Deep Learning for Coders (2020)
https://www.youtube.com/playlist?list=PLfYUBJiXbdtRL3FMB3GoWHRI8ieU6FhfM
** Lesson 1 https://www.youtube.com/watch?v=_QUEXsHfsA0
- Neural networks have limited range of things it can do with 1 layer (by Minsky research)
- But with more layers the problem is solved (also by minsky)
- People used just 2 layers which limited performance
- Usinge more layers makes it "DEEP" learning

* Video: 2011 - Machine Learning for the Web - Hilary Mason
** 1 Introduction
- Classification problems:
  - Clustering of categorical data
  - Named Entity Disambiguation: separate different entities (similar)
- Recommendation systems
- Special data (uses domain knowledge)
  - Geographic
  - Timeseries
- Approaches from:
  - Having data
  - Having a problem
  - Have infrastructure
- Methodology:
  1) Obtain
  2) Scrub
  3) Explore
  4) Model
  5) Interpret
** 2 Classifying Web Documents - The Theory
- Problems harder to classify (write logic)
- Supervised learning
  - Examples:
    - SPAM classification
    - language identification
    - Face detection
- Book: "Data Source Handbook"
- NYT has <meta> tags with information about the article.

* Book: 2019 | Grokking Deep Learning                    | Andrew W. Trask
https://github.com/iamtrask/Grokking-Deep-Learning
* Book: 2021 | Loving Common Lisp                        | Mark Watson
** Backpropagation Neural Networks
- Trained by  applying training inputs to the networks
- Compare differences/errors between
  1) Propagated values
  2) Training data values
- We magnitude of these errors are used to adjust the weights in the network
- Some problems while trying to find "good enough" weights
  1) (Randomness) Sometimes he accumulated error at a *local minimum* is too large, is best to restart the training
  2) (Memory) If we have enough *memory* and with not enough data, we might just memorize the training data.
     Memory=weights. Start using a small network.
- The ~activation values~ of individual neurons are limited to the range [0,1].
  - Sum of the activation values of neurons in the previous layer *times* the values of the connecting weights and then
    Using *sigmoid* function to map the sums to desired range.
* Book: 2021 | Deep Learning: A Visual Approach          | Andrew Glassner
  https://nostarch.com/deep-learning-visual-approach
  https://github.com/blueberrymusic/Deep-Learning-A-Visual-Approach (scikit-learn)
** Introduction
- Know, stats (to know how to describe the "patterns" in the data)
- Know, ~bayes~ (to know the likelihood an algorithm is correct)
- Know, IT (information theory) to measure kinds of information
- Do, machine learning classification to explore the data we have before DL
- Know, ensambles of different ML systems instead of a big one, sometimes is better
- ~Backpropagation~ (a way of training) and ~Optizers~ (modifies the network numbers)
- ~Convnet~ (convolution neural networks) made to handle spatial data, like images. Like recognizing objects.
- ~Autoencoders~ simplify datasets, or clean images (?
- ~Recurrent Neural Networks~ for sequences (text or audio)
- ~Attention and Transformers~ to interpret and generate text
- ~Reinforment Learning~ ?
- ~Generative Adversarial Networks~ to generate data
** Part 1
** 1 An Overview of Machine Learning
- Our goal (with ML) is to discover *meaningful* information,
  where is up to us decide what's *meaninful*.
- ~Expert Systems~: we create rules from what the experts tells us. Feature engineering.
- ~Supervised Learning~: we provide *labeled* data.
  When the system gets enough right answers for our needs we can say it is *trained*
- ~Unsupervised Learning~: it learns about the relationships between the inputs provided.
  Used for clustering into groups.
  Used to improve the quality of data.
  Used for compress data.
- ~Reinforment Learning~ when we search to optimize (? something, but we don't know how.
  While we judge how good or bad the algorthim is in relative terms. ("probably good", "better than the last one")
  It can be always searching with new data, while using the "best" solution found.
- ~Deep Learning~ uses a series of steps or *layers* for computation
- Neurons turn input value into a number.
  Neurons stay the same, what can change is the input and weights
  Initial weights are random.
  Loop -> Weights are adjusted carefully by a small ammount. And output is judged.
  Neurons converge into looking for *features* although we never told him to.
** 2 Essential Statistics
* Book: 2020 | Programming ML From Coding to DL          | Paolo Perrotta
** 1
- https://news.stanford.edu/2017/11/15/algorithm-outperforms-radiologists-diagnosing-pneumonia/
  - deep learning
