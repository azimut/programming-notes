#+TITLE: dc
#+DATE: <2025-01-11 sáb>

|--------+-----------------|
|  <c>   |       <c>       |
| manual |     [[https://www.gnu.org/software/bc/manual/dc-1.05/html_mono/dc.html][gnu]] [[https://wolfram.schneider.org/bsd/7thEdManVol2/dc/dc.html][bsd]]     |
| source |      [[https://github.com/dspinellis/unix-history-repo/blob/Research-V7-Snapshot-Development/usr/src/cmd/dc/dc.c][unix]]       |
|  wiki  | [[https://en.wikipedia.org/wiki/Dc_(computer_program)][english]] [[https://es.wikipedia.org/wiki/DC_(Unix)][spanish]] |
|--------+-----------------|

- 1971
- Authors:
  - Robert H. Morris (39)
  - Lorinda Cherry (27)
- "Desk Calculator"
- a reverse-polish (RPN) calculator
- a stack based language
- up to 1M digits of decimal precision
- ~/.dcrc

* cli

#+begin_src sh
  dc [OPTIONS] [FILES]
#+end_src

|---------------------+----------------------------------|
|         <c>         |                                  |
|       -f FILE       | executes script file             |
|     --file=FILE     | "                                |
|      -e SCRIPT      | runs commands in script on input |
| --expression=SCRIPT | "                                |
|---------------------+----------------------------------|

#+begin_src sh
  DC_LINE_LENGTH=0   # disable line break
  DC_LINE_LENGTH=999 # < 2^16 -1
#+end_src

#+begin_src sh
  $ dc script.dc
  $ dc -e '[Enter time: ]P?st' -e '[Distance: ]Plt2^0.5*9.8*p'
  $ echo '2 3 +' | dc
  $ echo '2 3'   | dc -f - -e 'f'
  $ echo '2 3'   | dc -e '? ? +'
#+end_src

* language

- supports recursion
- # for comments

** strings

- can only be printed or execute them as macros
- delimited by []

** numbers

- hex numbers MUST be upcased (A-F)
- use _ for negative numbers

|---+-----+---+-----------------------+---+-----+---+---------------------------|
|   | <c> |   |          <c>          |   | <c> |   |            <c>            |
| T |     | P |                       | T |     | P |                           |
|---+-----+---+-----------------------+---+-----+---+---------------------------|
| 1 |  i  |   |    set input radix    |   |  I  | 1 |     push input radix      |
| 1 |  o  |   |   set output radix    |   |  O  | 1 |     push output radix     |
| 1 |  k  |   | set decimal precision |   |  K  | 1 |  push decimal precision   |
|---+-----+---+-----------------------+---+-----+---+---------------------------|
| 1 |  Z  | 1 |  number of decimals   | 1 |  X  | 1 | number of fraction digits |
|---+-----+---+-----------------------+---+-----+---+---------------------------|
| 2 |  +  | 1 |       fst + snd       | 2 |  -  | 1 |         fst - snd         |
| 2 |  *  | 1 |       fst * snd       | 2 |  /  | 1 |         fst / snd         |
| 2 |  %  | 1 |    remainder of /     | 2 |  ~  | 2 |      divmod(fst,snd)      |
| 2 |  ^  | 1 |       fst ^ snd       | 3 |  ¦  | 1 |     mod(fst, snd^trd)     |
| 1 |  v  | 1 |         sqrt          |   |     |   |                           |
|---+-----+---+-----------------------+---+-----+---+---------------------------|

** arrays

|---+----+---+--------------|
| 2 | :A |   | A[snd] = fst |
| 1 | ;A | 1 | A[fst]       |
|---+----+---+--------------|

** registers (256)

- each register has his own stack
- valid names: a A 0 . " ...
  - one char length
  - you CAN use a register name that overlaps with a command
  - and the command will stil work

|---+----+---+----------------|
| 1 | sR |   | R.push(fst)    |
|   | LR | 1 | R.pop()        |
| 1 | SR |   | R = [fst]      |
|   | lR | 1 | R[R.size] ¦¦ 0 |
|---+----+---+----------------|

** other commands
|---+-----+---+---------------------------|
|   | <c> |   |            <c>            |
| 1 |  a  | 1 |       1st char/byte       |
|   |  !  |   |      system command       |
|   |  #  |   |       comment line        |
|   |  ?  | 1 | ask user input, and x it  |
|---+-----+---+---------------------------|
*** print
|---+---+---+----------------------------------------------|
|   | f |   | print full stack                             |
|   | p |   | print top of stack, with \n                  |
| 1 | n |   | print top of stack, no \n                    |
| 1 | P | 1 | print top of stack, no \n, as char if number |
|---+---+---+----------------------------------------------|
*** stack manipulation
|---+---+---+--------------------------------|
|   |   |   |              <c>               |
|   | z | 1 |           stack size           |
| * | c |   |        clear all stack         |
| 1 | d | 2 |              dup               |
| 2 | r | 2 |              swap              |
| 1 | R |   | rotates the top Nth items once |
|---+---+---+--------------------------------|
*** control flow
|---+-----+---+-----------------------|
|   | <r> |   |          <c>          |
| 1 |   x |   |  executes as a macro  |
| 2 |  >R |   |       x R if >        |
| 2 | !>R |   |       x R if <=       |
| 2 |  <R |   |       x R if <        |
| 2 | !<R |   |       x R if >=       |
| 2 |  =R |   |       x R if =        |
| 2 | !=R |   |       x R if !=       |
| - |   q |   |  exits 2 level macro  |
| 1 |   Q |   | exits Nth level macro |
|---+-----+---+-----------------------|
* snippets

#+CAPTION: Morris and Cherry on 1974
[[./morrischerry74-bright.png]]

- https://literateprograms.org/category_programming_language_dc.html
- https://rosettacode.org/wiki/Category:Dc
- [[https://github.com/brunk23/dc-programs][brunk23/dc-programs]]
- sum of first 36 integers
  #+begin_src
  36[d1-d1<F+]dsFxp
  #+end_src
- factorial
  #+begin_src
  [d1<g]Sf[d1-lfx*]Sg 13lfx
  #+end_src

* codebases
- https://x.com/nixcraft/status/1493822005262491651
- [[https://github.com/Alhadis/language-etc/blob/1455feb6de582239b67e8bbde8086569db377e3d/samples/dirsize.dc][Alhadis/language-etc/dirsize.dc]]
- [[https://github.com/brunk23/code-challenges/blob/7b7afc5088142102ce9610cbda7bac5cd9583829/trend.error][brunk23/code-challenges/trend.error]]
- [[https://github.com/makenowjust/quine/blob/1d33bee091f4b37352f5f5c2dd5813095da331e9/quine.dc][makenowjust/quine]]
  #+begin_src
  [91aPP93aP[dx]p]dx
  #+end_src
- grondilu/bitcoin-bash-tools
  - [[https://github.com/grondilu/bitcoin-bash-tools/blob/master/bitcoin.sh][bitcoin.sh]]
  - [[https://github.com/grondilu/bitcoin-bash-tools/blob/master/t/basics.t][basics.t]]
** sergiosgc/AdventOfCode2021

- day1 [[https://github.com/sergiosgc/AdventOfCode2021/blob/main/src/day01/one.dc][part 1]]
  #+begin_src
  [1Lc+sc]sC
  [rdSar>CLaz1<L]sL
  0sc0d=LLcp
  #+end_src
- day1 [[https://github.com/sergiosgc/AdventOfCode2021/blob/main/src/day01/two.dc][part 2]]
  #+begin_src
  [lCsDlBsClAsBsA]sr
  [1lR+sR]si
  [lBlClD++lAlBlC++<i0d=rz0!=l]sl
  0sA0sB0sC0sD0sR
  0d=r0d=r0d=r0d=r
  0d=l0dd=llRp
  #+end_src

** tckmn/polyaoc-2019

- [[https://github.com/tckmn/polyaoc-2019/blob/master/01/dc/01_1.dc][01_1.dc]]
  #+begin_src
    0[3/2-+?z2=a]sa6laxp
  #+end_src
- [[https://github.com/tckmn/polyaoc-2019/blob/master/01/dc/01_2.dc][01_2.dc]]
  #+begin_src
    0
    [lbxszlsx?z1<a]sa
    [3/2-dd8<b]sb
    [+z1<s]ss
    ?laxp
  #+end_src
- [[https://github.com/tckmn/polyaoc-2019/blob/master/02/dc/02_1.dc][02_1.dc]]
- [[https://github.com/tckmn/polyaoc-2019/blob/master/05/dc/05.dc][05.dc]]

* articles

#+ATTR_ORG: :width 200
#+CAPTION: Robert H. Morris in 1988
[[./morris88.jpg]]

- 24 [[https://bash-hackers.gabe565.com/howto/calculate-dc/][Calculating with dc - The Bash Hackers Wiki]]
- 22 [[https://blogs.perl.org/users/laurent_r/2022/07/perl-weekly-challenge-173-sylvesters-sequence-in-dc.html][Perl Weekly Challenge 173: Sylvester's Sequence in dc]]
- 21 [[https://psychocod3r.wordpress.com/2021/05/08/obfuscated-unix-scripting-with-dc/][Obfuscated Unix Scripting with dc]]
- 21 https://www.computerhope.com/unix/udc.htm
- 20 [[http://web.archive.org/web/20200607102626/https://ben165.github.io/unix_dc/index.html][A deeper introduction in Unix dc]]
- 18 [[https://eklitzke.org/summing-integer-ranges-with-dc][Summing Integer Ranges With dc]]
- 97 [[https://wolfram.schneider.org/bsd/7thEdManVol2/dc/dc.pdf]]
- ?? [[https://cs.unh.edu/~charpov/dc.html][Fun with dc]]
- ?? [[https://wiki.c2.com/?DeeCee][Dee Cee]]

* videos

#+CAPTION: Lorinda Cherry in 1982
#+ATTR_HTML: :width 400
[[./dc_bell.png]]

- 23 [[https://www.youtube.com/watch?v=9M8sQrrS_f8][RPN, dc, and the HP-12C]]
- 23 [[https://www.youtube.com/watch?v=MDENRcTWDSY][Découvrons & Programmons "dc" (desk calculator) - 1971]] [[https://blog.univ-angers.fr/mathsinfo/dc/][(article)]]
- 21 [[https://www.youtube.com/watch?v=WxCP8oHq_Ss][The Genius of the "dc" Desktop Calculator]]
- 11 [[https://okpanico-wordpress-com.translate.goog/2011/07/04/dc-desk-calculator-antenato-di-bc-calc-e-altri-ancora/?_x_tr_sl=it&_x_tr_tl=en&_x_tr_hl=es&_x_tr_pto=wapp][dc = desk calculator, antenato di bc, calc e altri ancora [Translation]​]]
- 82 [[https://youtu.be/XvDZLjaCJuw?t=921][UNIX: Making Computers Easier To Use]]

* implementations

- Rust https://github.com/wfraser/dc4
- C https://git.gavinhoward.com/gavin/bc
- C (expanded) https://github.com/akjmicro/dclang
