#+TITLE: sh
#+DATE: <2025-01-17 vie>

- http://web.archive.org/web/20180206023115/http://sircmpwn.github.io/2018/02/05/Introduction-to-POSIX-shell.html
- 11 Insufficiently known POSIX shell features https://apenwarr.ca/log/20110228
- http://www.etalabs.net/sh_tricks.html
- https://www.grymoire.com/Unix/Sh.html
- https://j3s.sh/thought/write-posix-shell.html
  https://lobste.rs/s/k4z2qf/write_posix_shell
- https://github.com/dylanaraps/pure-sh-bible
- library: https://github.com/modernish/modernish
- tool: litterate programming http://web.archive.org/web/20100701104523/http://rtomayko.github.com:80/shocco/
- codebase:
  - git https://git.sr.ht/~sircmpwn/shit

* history

#+begin_src pikchr :file shellhistory.svg :result graphics :exports results
  fill = white
  "Thompson" "1971" ; arrow;
  "Bourne"   "1979" ; arrow;
  "Korn"     "1983" ; arrow;
  "POSIX.2"  "1992"
#+end_src

#+ATTR_ORG: :width 600
#+ATTR_HTML: :width 600
#+RESULTS:
[[file:shellhistory.svg]]

- https://en.wikipedia.org/wiki/Unix_shell
- [[https://en.wikipedia.org/wiki/Thompson_shell]]
  - 1971
  - Ken Thompson(28)
  - a command interpreter not designed for scripting
  - had support for
    - io redirections
    - process pipes (idea by Douglas McIlroy)
  - replaced by Bourne Shell in Unix v7
- https://en.wikipedia.org/wiki/Bourne_shell
  - 1979
  - Stephen Bourne
  - support for
    - here documents
    - command substitutions
  - POSIX standard is based on korn shell (ksh88), an enhancement on Bourne Shell
- https://en.wikipedia.org/wiki/KornShell
  - 1983
  - David Korne
  - POSIX is based on ksh88 (1992?)

* language

- Multi-line comment
  #+begin_src sh
    : '
      hello there
      this is wacky!!
    '
  #+end_src
- OPINION: one way that shell scripts hide/handle complexity is by transforming data through pipes. What in other programming languages might need nested function calls or temporary variables. Pipes are, in a way, similar to method chaining.
- use one /=/ when comparing strings, [[https://eklitzke.org/bash-if-equals][/==/ is NOT supported]]
  #+begin_src sh
    if [ "$foo" = "$bar" ]
  #+end_src

* snippets

- Sleep until host is up:
  #+begin_src sh
    until ssh root@10.10.10.10; do sleep 3; done
  #+end_src

|-----------+--------------------+-----------|
|           |                <r> |    <c>    |
| head -n 5 |      first 5 lines |   take    |
| tail -n+5 | skip first 4 lines |   drop    |
| tail -n 5 |       last 5 lines | take-last |
| head -n-5 |  skip last 5 lines | drop-last |
|-----------+--------------------+-----------|
