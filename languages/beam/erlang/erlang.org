- https://github.com/duomark/epocxy
- https://github.com/Telichkin/otp_cheatsheet
- examples https://rosettacode.org/wiki/Category:Erlang
- build tool https://github.com/erlang/rebar3
- build tool https://erlware.github.io/relx/
- build tool https://erlang.mk/
- mailing list https://erlang.org/mailman/listinfo
- doc https://erlang.org/doc/reference_manual/users_guide.html
- doc https://erlang.org/doc/apps/stdlib/index.html
* Types
- Destructuring can happen on the function parameter
  - f({athing,{A,B},N}=C) -> C
|--------+-------------+----------------+----------------------------+--------------------------+---------|
| type   | creating    | p. matching    | accesing                   | updating                 | spec    |
|--------+-------------+----------------+----------------------------+--------------------------+---------|
| map    | #{a => 1}   | #{a := Value}  | maps:get(K,M)              | maps:update(K,V,M)       | map()   |
|        |             |                |                            | M#{key => 1}             |         |
|        |             |                |                            | M#{key := 1}             |         |
| list   | [1,2]       | [A,B!C]        | lists:nth(N,L)             |                          | list()  |
| tuple  | {a,1}       | {A,B}          | erlang:element(K,T)        | erlang:setelement(K,V,T) | {T1,T2} |
| record | #name{a=23} | #name{a=Value} | Rec#r1.field               | Rec#name{field = 23}     | #name{} |
|        |             |                | Record#r1.field1#r2.field2 |                          |         |
|--------+-------------+----------------+----------------------------+--------------------------+---------|
- https://www.erlang.org/doc/reference_manual/data_types.html
- https://www.erlang.org/doc/reference_manual/records.html
- https://www.erlang.org/doc/reference_manual/expressions.html
- https://www.erlang.org/doc/reference_manual/typespec.html
* Libraries
| https://github.com/whatsapp/erlfmt     | 0.3 | code formatter           |
| https://github.com/erlang-ls/erlang_ls | 0.5 | LSP                      |
| https://github.com/g-andrade/locus     | 0.1 | ASN                      |
| https://github.com/eproxus/grapherl    | 0.1 | graph otp system         |
| https://github.com/savonarola/agent    | 0.0 | otp agent implementation |
| https://github.com/aerosol/gen_cycle   | 0.0 | otp recurring task       |
* rebar3
** new
rebar.config
.gitignore
 LICENSE
 README.md
*** lib     (built-in): Complete OTP Library application (no processes) structure
#+begin_src
> rebar3 new lib <NAME>
 src/<NAME>.erl
 src/<NAME>.app.src
#+end_src
*** app     (built-in): Complete OTP Application structure.
#+begin_src
> rebar3 new app <NAME>
 src/<NAME>_app.erl
 src/<NAME>_sup.erl
 src/<NAME>.app.src
#+end_src
*** release (built-in): OTP Release structure for executable programs
#+begin_src
> rebar3 new release <NAME>
 apps/<NAME>/src/<NAME>_app.erl
 apps/<NAME>/src/<NAME>_sup.erl
 apps/<NAME>/src/<NAME>.app.src
 config/sys.config
 config/vm.args
#+end_src
