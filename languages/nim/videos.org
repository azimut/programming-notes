- Channel https://www.youtube.com/@nimprogramminglanguage3130
- Channel https://www.youtube.com/@kiloneie/playlists
- Video: tsoding aoc 2020 day 11 https://www.youtube.com/watch?v=lHzbWWjdloM
- Video: #ChillCode | Nim for Pentesting w/HuskyHacks! https://www.youtube.com/watch?v=NirjqeUWi9o
  starts 12:00
- Video: 16. BYOT: Build Your Own Tools for Fun and Profit by Cas van Cooten  https://www.youtube.com/watch?v=PAxYI99A0mg
- Video: Aaron Haymore - Red Team Tooling with Nim-Lang https://www.youtube.com/watch?v=s9B3LsSnesU
- Video: The SECRET of NIM! - Creating RED TEAM TOOLS with Nim-Lang  https://www.youtube.com/watch?v=1l9169qW2FA
- Video: [FOSDEM 2022] Pararules - a Nim rules engine for reactive programs and games https://www.youtube.com/watch?v=uYFEJUEOHPI
* 19 | Boomer                    | Tsoding
Source: https://github.com/tsoding/boomer
** https://www.twitch.tv/videos/463963305
- Nim is almost case insensitive (like pascal)
  - As long as the first character is identical
  - ME: makes it harder to have a consistent style
- Nim ignores underscores in variable names
- There is a *nil*
- *discard* is the ignore() of OCaml
- NIM Supports different types of function calls
  - f(x)
  - f x
  - x.f()
  - x.f
- parens() are the same as discard (?
- x11
  - display is the connection
  - screen is the monitor
  - window is a window
- nimble build
  does NOT return a parsable error by emacs (like other languages)
- IN PASCAL or in Jai, but *NOT* in nim
  you can use ~using~ on an object type to reduce noise
  instead of "result.fielda = 1" is "fielda = 1"
** https://www.twitch.tv/videos/468009266
- 00:58:00
- =helm-do-grep-ag=
- Exploring a codebase
  - There are IDE's that build you the hierarchy of a particular functions.
  - Or you can do it manually, from the bottom (the function you care about) to the top (main)
- copy current file position as a ORG-MODE link
  https://github.com/rexim/dotfiles/blob/57585e93c01238b4cd7ec1b70c7c2c5e4abf7733/.emacs.rc/misc-rc.el#L35
** https://www.twitch.tv/videos/470931124
** https://www.twitch.tv/videos/474198218
** https://www.twitch.tv/videos/478605555
** https://www.twitch.tv/videos/480601925
** https://www.twitch.tv/videos/483963539
** https://www.twitch.tv/videos/483963986
** https://www.twitch.tv/videos/486585497
** https://www.twitch.tv/videos/489880649
** https://www.twitch.tv/videos/492671715
* 21 | Nim Lang for pentersters
**   I - Bypass antivirus using platform independent reverse shell https://www.youtube.com/watch?v=JhpUALY4o8U
**  II - Classic Shellcode Injection using Nim  https://www.youtube.com/watch?v=QuhYARcuW6I
** III - Antivirus assessment using PS reverse shell without PowerShell.exe  https://www.youtube.com/watch?v=DR6wZbCKnOA
**  IV - Automate Macro Embedded Excel and assessment of anti virus  https://www.youtube.com/watch?v=SBjaCYNlj2A
**   V - Create Undetectable Payload by loading your exe to memory  https://www.youtube.com/watch?v=jhHmdfXXOHI
* 21 | Wang Tiles 01             | Tsoding
https://www.youtube.com/watch?v=IGTuv_KKLFs
* 22 | Nim in 100 Seconds

https://www.youtube.com/watch?v=WHyOHQ_GkNo

- no need of a main function
- identation matters
- iterators
- closures
- generics
- RC (reference counting) GC, but switchable
- Can transpile to:
  - C, C++, ObjectiveC, Js
- Later compiled by Clang
- macros / metaprogramming
- First class functions

* 22 | âš¡ Learning Nim - First Look
https://www.youtube.com/watch?v=Htjq9yF11m0
- Right tool for _security hacking_ tools? Like Go, but NOT Rust.
- Small binaries
