- 12 [[https://www.youtube.com/watch?v=qD-RmoBf9v0][Making Makefiles (Lonnie)]]
- 16 [[https://www.youtube.com/watch?v=GExnnTaBELk][C Programming: Makefiles]] by Barry Brown
- 16 [[https://www.youtube.com/watch?v=OZ_ra8CCDDA][BIVBlog #41: Makefile Basics (not only) for Microcontrollers]]
- 20 [[https://www.youtube.com/watch?v=FfG-QqRK4cY][Makefiles, but in English]] by 801Labs
- 20 COS 217 Fall 2020 Lecture 7 - Building with make https://www.youtube.com/watch?v=0gBhNNnd1LM
* 20 - Lecture 8: Metaprogramming
https://www.youtube.com/watch?v=_Ms1Z4xfqv4
- we generate a *pipeline*
- depending on static files
- ~Semantic Versioning~ Major.minor.patch
** Makefile

#+begin_src makefile
  paper.pdf: paper.tex plot-date.png
       pdflatex.png

  plot-%.png: %.data plot.py
      ./plot.py -i $*.dat -o $@
#+end_src

** plot.py

note how small is the python code for just a small and powerful library...
#+begin_src python
  import matplotlib
  import matplotlib.pyplot as plt
  import numpy as np
  import argparse

  parser = argparse.ArgumentParser()
  parser.add_argument('-i', type=argparse.FileType('r'))
  parser.add_argument('-o')
  args = parser.parse_args()

  data = np.loadtxt(args.i)
  plt.plot(data[:, 0], data[:, 1])
  plt.savefig(args.o)
#+end_src

* 19 - Makefiles: 95% of what you need to know

https://www.youtube.com/watch?v=DtGrdB8wQ_8
- -MP -MD, flags to be passed to GCC
- $(info something hello world)
- Makefile foreach, patsubst, wildcard, .d
  #+begin_src makefile
    # generate files that encode make rules for the .h deps
    # generate .d files, includes information for Make
    DEPFLAGS = -MP -MD
    INCDIRS  = . ./include/
    CFLAGS   = $(foreach D,$(INCDIRS),-I$(D))
    CFILES   = $(foreach D$(CODEDIRS),$(wildcard $(D)/*.c))
    OBJECTS  = $(patsubst %c,%,o,$(CFILES))
    DEPFILES = $(patsubst %c,%,o,$(CFILES))
  #+end_src

* 16 - Introduction to Make and GNU Autotools | Barry Smith, Argonne National Laboratory

https://www.youtube.com/watch?v=WFLvcMiG38w
#+begin_src makefile
  OUTPUT_OPTION = -MMD -MP -o $@

  SOURCE = ext8.c util8.c
  DEPS   = $(SOURCE:.c=.d)
  OBJS   = $(SOURCE:.c=.o) # replace, like patsubst
          -include ${DEPS}
#+end_src
