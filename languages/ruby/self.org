#+TITLE: Ruby
#+DATE: <2024-06-11 mar>

|------+-----------------------------------------------------------|
| docs | https://docs.ruby-lang.org/en/                            |
| home | https://www.ruby-lang.org/en/                             |
| wiki | https://en.wikipedia.org/wiki/Ruby_on_Rails               |
| wiki | https://en.wikipedia.org/wiki/Ruby_(programming_language) |
| wiki | https://en.wikibooks.org/wiki/Ruby_Programming            |
|------+-----------------------------------------------------------|

* Language

#+begin_src ruby
  #!/usr/bin/env ruby
  if $PROGRAM_NAME == __FILE__
    puts "Hello, World!"
  end
#+end_src

- Author: Yukihiro Matsumoto (matz)
- 1995-
- Written in C
- Author wanted an OO language.
  Didn't like Python, because it wasn't true OO.

- challenges
  - https://www.rubykoans.com/

- Typing: duck, dynamic, strong
- Everything is an object (including primitive data types)
  - not variables, they hold references to an object
    - use #dup when need a copy
    - use #freeze to not admit modifications (numbers and symbols are by default)
  - ergo, everything is a reference
  - arguments are passed as references to functions
- Optional () on function calls
- indentation isn't significant
- most lines that look like *statements* in Ruby are actually *expression* that return a value
- #tap
  - useful for debugging chain of method calls
  - takes a block, pass the receiver, and then return the orignal receiver of the method
  - a "no-op", execept that invokes a block
- restricted to pure 7-bit ascii for operators,
  for compatibility across all different source file encodings
- when we call a method without putting a receiver object before it
  it refers to the object named "self"
  aka "puts == self.puts"

- lib/<gemname>/<class>.rb
- test/<gemname>/all_tests.rb # require_relative other .rbs
- test/<gemname>/<class>_test.rb

** variables
- the "nouns" of Ruby
*** global variables
- https://www.fastruby.io/blog/exploring-global-constants-and-variables.html
- https://rubyapi.org/o/english
|--------------------------+----+------------------------------------------------------|
|                      <r> |    |                                                      |
|                          |    | description                                          |
|--------------------------+----+------------------------------------------------------|
|                 __FILE__ |    | has the name of the file being run                   |
|                   $stdin |    | standard input                                       |
|                  $stdout |    | standard output                                      |
|                  $stderr |    | standard error                                       |
|                    $ARGV | $* | array with command line arguments                    |
|                    $ARGF | $< | the content of all the files whose names were passed |
|          $DEFAULT_OUTPUT | $> |                                                      |
|                     $ENV |    | Hash that contains environment variables             |
|              $ERROR_INFO | $! |                                                      |
|          $ERROR_POSITION | $@ |                                                      |
|         $FIELD_SEPARATOR | $; | FS                                                   |
|  $OUTPUT_FIELD_SEPARATOR | $, | OFS                                                  |
|  $INPUT_RECORD_SEPARATOR | $/ | RS                                                   |
| $OUTPUT_RECORD_SEPARATOR | $\ | ORS                                                  |
|       $INPUT_LINE_NUMBER | $. | NR                                                   |
|          $LAST_READ_LINE | $_ |                                                      |
|              $PROCESS_ID | $$ | PID                                                  |
|            $CHILD_STATUS | $? |                                                      |
|                   $MATCH | $& | regex op, the match (all between //)                 |
|                $PREMATCH | $` | regex op, to the left of last match                  |
|               $POSTMATCH | $' | regex op, to the right of last match                 |
|        $LAST_PAREN_MATCH | $+ | regex op, the last group                             |
|                          | $N | regex op, where N is a number of the nth match       |
|                          | $0 | aka $PROGRAM_NAME                                    |
|--------------------------+----+------------------------------------------------------|
** testing

- "do NOT mind code duplication in tests" - PragmaticRuby
- assert_, refute_
- _equal, _empty
#+begin_src ruby
  require_relative "words_from_string"
  require "minitest/autorun" # runs all the test_*
  class TestWordsFromString < Minitest::Test
    def setup # called before each test_ method in class
      @playlist = Playlist.new("Gonzo")
      @movie1 = Movie.new("A", 10)
      @movie2 = Movie.new("B", 9)
      $stdout = StringIO.new # supress stdout
    end
    def test_high_number
      @playlist.stub(:roll_die, 6) do  # override method to return a constant value
        @playlist.play()
        assert_equal 11, @movie1.rank
      end
    end
    def test_empty_string # methods starting with "test" automatically run
      assert_equal([], words_from_string(""))
      assert_equal([], words_from_string("   "))
    end
  end
#+end_src

** operators
|------+---------------------------------------------------|
| <c>  |                                                   |
|  OP  |                                                   |
|------+---------------------------------------------------|
|  +   | sums, concatenate                                 |
|  =~  | match string against regex, returns start pos/nil |
| %w[] | create an array of strings                        |
| %w() | "                                                 |
| %i[] | "                                                 |
|  <<  | appends an element to an array                    |
|  ::  | scope resolution operator                         |
| #{}  | string interpolation                              |
| ¦¦=  | if LS is falsey, eval RS and assign it to LS      |
|  =>  | "hashrocket", associates k/v in a Hash            |
|------+---------------------------------------------------|
#+TBLFM: $1=>
** require

#+begin_src ruby
  require "csv"
  require_relative "book_in_stock" # for "./book_in_stock.rb"
#+end_src

** i/o

- https://docs.ruby-lang.org/en/2.4.0/Open3.html
  - child process stdin/stdout/stderr and a thread for it
- https://ruby-doc.org/stdlib-2.6.3/libdoc/pathname/rdoc/Pathname.html
  - wrapper around File class, crossplatform
- popen - for r/w from/to a process
- system - if you don't care about the output just stdout
- p
  - calls #inspect
- pp
- puts
  - calls #to_s, to get its string representation
  - short for "outPUT String"
  - available to all objects
  - often written without parentheses

** style

- guide https://github.com/airbnb/ruby
- guide https://github.com/rubocop/ruby-style-guide
- tool: linter/formatter https://github.com/standardrb/standard
- tool: linter/formatter https://github.com/rubocop/rubocop/

- 2 spaces for indentation
- book_in_stock.rb (file) / BookInStock (class)

- variable/parameters/methods
- @instance_var @X @_
- @@class_var @@N @@x_pos @@SINGLE
- $global $CUSTOMER $_ $plan9 $Global
- ClassName
- ModuleName
- CONSTANT_NAME

** changelog

https://rubyreferences.github.io/rubychanges/evolution.html

*** 1.0 - 1996

- 1.6   2000
- 1.8   2003-2013
- 1.9.3 2011
  - block local variables
  - additional lambda syntax (->(){})
  - additional hash literal syntax (colons after the symbol)
  - per string encoding
  - new socket api
  - require_relative

*** 2.0 - 2013

- 2.0
  - compatible with 1.9.3
  - method keyword arguments
  - new method "Module#prepend" to extend a class
  - new literal to create array of symbols
  - new api for lazy eval of Enumerables
  - new convention of using "#to_h" for object to hash conversion

*** 3.0 - 2020

- 3.0
  - "3x faster than 2"
  - introduces MJIT/YJIT
  - new concurrency utils: Fibre, Scheduler, Ractor
  - introduces RBS, for typed ruby
- 3.1   2021
- 3.2   2022
  - WASM compatible via WASI
- 3.3   2023
  - new parser: Prism
  - introduces RJIT

** control flow

- if/elsif/else/end
- unless/
- while/end
- =statement modifiers=
  #+begin_src ruby
    return nil if user.nil? # guards clause, usually at the beginning of a method

    puts "Danger" if radiation > 3000

    square = 4
    square = square * square while square < 1000
  #+end_src
- loop/end
  - infinite loop
  - break out of them
  - it will also auto-break if the *Enumerator* inside runs out of values
    #+begin_src ruby
      short_enum = [1,2,3].to_enum
      long_enum = ('a'..'z').to_enum
      loop do # loops 3 times
        puts "#{short_enum.next} - #{long_enum.next}"
      end
    #+end_src

** a =block= {} do/end

- blocks are closures
- is a chunk of code you can pass to a method, as it were another parameter

- assign a block to a variable, all of these return a =Proc= from the block
  #+begin_src ruby
    bo = ->(param) { puts "You called me with #{param}" } # stabby lambda, optional parens
    bo = lambda { |param| puts "You called me with #{param}" } # Kernel method "lambda", error on wrong nargs
    bo = proc { |param| puts "You called me with #{param}" } # Kernel method "proc", bubble ups "return"
    bo = Proc.new { |param| puts "You called me with #{param}" } # same but OLD style
    bo.call(99)
  #+end_src

- can be passed to a *method* either
  1) extra IMPLICIT last argument that's passed to a method
  2) (&) EXPLICIT last argument, to call store it and call it later (callbacks)
     #+begin_src ruby
       class ProcExample
         def pass_in_block(&action)
           @stored_proc = action
         end
         def use_proc(parameter)
           @stored_proc.call(parameter) # .call stored block
         end
       end
       eg = ProcExample.new
       eg.pass_in_block { |param| puts "The parameter is #{param}" }
       eg.use_proc(99)
     #+end_src

- parameters to a block are ALWAYS local to that block
- has access to variables outside his scope
- =Iterator= or =Enumerator= a method that can invoke a block of code repeatedly
- you can only pass one block per method call
  greet("dave", "loyal customer") { puts "hi" }
- invoked in a method using ~yield~
  - block parameters put after a ; are considered locals to that block (awk-ish) (RARE!)
    #+begin_src ruby
      square = "some shape"
      sum = 0
      [1,2,3,4].each do |value;square| # 2 block parameters
        square = value * value
        sum += square
      end
      puts sum
      puts square
    #+end_src
  - no argument
    #+begin_src ruby
      def call_block
        puts "Start of method"
        yield
        yield
        puts "End of method"
      end
      call_block { puts "In the block" }
    #+end_src
  - with arguments
    #+begin_src ruby
      def who_says_what
        yield("Dave", "hello")
        yield("Andy", "goodbye")
      end
      who_says_what { |person, phrase| puts "#{person} says #{phrase}" }
    #+end_src
  - for =transactions= (ME: using blocks for meta-programming stuff)
    #+begin_src ruby
      class File
        def self.open_and_process(*args) # class method
          f = File.open(*args)
          yield f
          f.close()
        end
      end

      File.open_and_process("testfile", "r") do |file|
        while line = file.gets
          puts line
        end
      end
    #+end_src

** Classes

- created with NAME.new
- has/can have
  - each instance has an ~object_id~ /property/
  - instance variables
- attributes are just methods without arguments
- the "only easy" way to change an object's state is by calling onf its methods
- templates for creating objectss

#+NAME: from "Programming Ruby 3.3"
#+begin_src ruby
  class BookInStock
    attr_accessor :price      # would create a attr_reader/attr_writer
    attr_reader :isbn #, :price   # creates the reader accessor methods #isbn and #price, for @isbn and @price
    def initialize(isbn, price) # called by BookInStock.new
      @isbn = isbn
      @price = Float(price)
    end
    # def price=(new_price) # setter
    #   @price = new_price
    # end
    def price_in_cents
      (price * 100).round # !!!! is valid to refer to it either as "price" or "@price"
    end
    def price_in_cents=(cents) # setter for a "virtual isntance variable", giving a "uniform access principle"
      @price = cents / 100.0
    end
  end
  book = BookInStock.new("isbn1", 33.80)
  book.price = book.price * 0.75 # using the setter and getter
#+end_src

#+NAME: optionally take a block
#+begin_src ruby
  class File
    def self.my_open(*args) # CLASS METHOD, parameter list into array "args"
      file = File.new(*args) # spread array "args", into individual arguments
      return file unless block_given? # guard return if no block_given?
      result = yield file
      file.close
      result
    end
  end
#+end_src

** Methods (.)

- private/public/protected def
- can be redefining (just warns about it)
- the verbs of ruby
- attached at the end of variables with by a dot
- some methods (such as =print=) are kernel methods, won't use the dot
- parameters
  - =positional= foo
  - =keyword= rank: 10
    needs the keyword to be passed
  - =default= rank = 10
    with a possible computed default
    (ME: aka &optional)
- kinds
  - module methods (::) self.
  - Class Methods (::) self.
    - attached after variables and constants by a double colon
  - instance methods (.)
    - called by RECEIVER.METHODNAME
    - a *message* is being send to the object,
      which contains the method name along with arguments
- special
  - to_s
  - inspect
  - each
- arguments, keyword args, *,**splats, &arguments
- Types
  - public: by default (except initialize which is private) (RARE explicit)
  - protected: can be invoked by class or subclasses (RARE!) can be used on attr_reader/w/a
  - private: cannot be invoked without an explicit receiver

** modules

- to group related constants/methods, or for mixins or namespaces

#+begin_src ruby
  module Snackbar
    Snack = Data.define(:name, :price)
    SNACKS = [
      Snack.new("popcorn", 3),
      Snack.new("candy", 1)
    ]
    def self.random_snack # self. declares a "module method"
      SNACKS.sample
    end
  end
#+end_src

#+begin_src ruby
  require_relative "snackbar"
  Snackbar::SNACKS.each do { |snack| puts snack.name }
#+end_src

** types

- Ruby 2: diagram of classes
  http://jeromedalbert.com/a-diagram-of-the-ruby-core-object-model/
  https://farm6.staticflickr.com/5443/10075536704_84aa13676a_o.jpg

- Constants
  - capitalized
  - proper nouns of Ruby

- nil
  - is an object, just like any other
  - represents the concept of nothing

- Numeric https://ruby-doc.org/3.0.7/Numeric.html
  - #positive?, #negative?, #nonzero?, #zero?
  - =Float= https://ruby-doc.org/3.0.7/Float.html
  - =Integer= https://ruby-doc.org/3.0.7/Integer.html
    - #times, #upto(N)

- Strings
  - "",%{},'',%q{} are string literals, from more to less work done
  - "",%{} checks for escape sequences (\) and expression interpolation (#{})
  - Both single and double quotes are used to create strings
  - #each_char returns an *Enumerator* if not given a block,
    you can call .each_with_index on it
  - alternatively #each_char.with_index

- Regexp // https://ruby-doc.org/3.2.2/Regexp.html
  - the =match operator= =~ can be used to match a string against it
    returns that starting position or nil
    - also through String#match? or Regex#match?
  - Regexp#sub
  - Regexp#gsub

- Symbols :foo
  - like lightweight strings
  - immutable
  - same named symbols have the same ~object_id~
  - used
    - as keys and identifiers
    - when you need a string but you won't be printing it
    - when you need to use the same string over and over

- Struct
  #+begin_src ruby
    Snack = Struct.new(:name, :price)
  #+end_src
  - when you have date and no behaviour
  - it creates accessors (r/w) automatically

- Data
  #+begin_src ruby
    Snack = Data.define(:name, :price)
  #+end_src
  - when you have date and no behaviour
  - it creates readers automatically
    - immutable

*** Enumerator (class)

- as objects they are =Enumerable=
- implements *external iterators*, where you control the iteration behavior
- Creating
  - what an iterator method returns if you don't pass it a block
  - #to_enum -> #next
  - #enum_for(:each_slice, 3) - in the case the method used for the enumerator takes params
  - Enumerator.produce - takes an initial value and a block
    #+begin_src ruby
      triangular_numbers = Enumerator.produce([1,2]) do |number,count|
        [number + count, count + 1]
      end
      5.times { print triangular_numbers.next.first, " " } # => 1 3 6 10 15
      p triangular_numbers.first(5).map { _.first } # => [1,3,6,10,15]
    #+end_src
  - Enumerator.new {|x| ...}
    #+begin_src ruby
      triangular_numbers = Enumerator.new do |yielder| # called when #next
        number = 0
        count = 1
        loop do
          number += count
          count += 1
          yielder.yield(number) # pausing point
        end
      end
      5.times { print triangular_numbers.next, " " } # 1 3 6 10 15
    #+end_src

*** Enumerable (module/mixin)
- https://ruby-doc.org/3.2.2/Enumerable.html
- #lazy => Enumerator::Lazy
  reimplements select/map/... to work with infinite sequences
  #+begin_src ruby
    class InfiniteStream
      def all
        Enumerator.produce(0) do |number|
          number += 1
        end.lazy
      end
    end
    p InfiniteStream.new.all.first(10)
    p InfiniteStream.new.select { (_1 % 3).zero? }.first(10)
    # Example:
    def palindrome(n)
      n = n.to_s
      n == n.reverse
    end
    p InfiniteStream.new
      .select { (_1 % 3).zero? }
      .select { palindrome?(_1) }
      .first(10)
    # Example: alternative syntax
    multiple_of_three = InfiniteStream.new.all.select { (_1 % 3).zero? }
    p multiple_of_three.first(10)
    m3_palindrome = multiple_of_three.select { palindrome?(_1) }
    p m3_palindrome.first(10)
    # Example: alternative syntax
    multiple_of_three = -> n { (n % 3).zero? }
    palindrome = -> n { n = n.to_s; n == n.reverse }
    p InfiniteStream.new.all
      .select(&multiple_of_three)
      .select(&palindrome)
      .first(10)
  #+end_src
- aka a collection of object references
- #reduce(0) { |sum,ele| sum + ele }
  #reduce { |sum,ele| sum + ele }
  #reduce(:+)
- #dig: helps to dig through nested data structures
  - Returns if not found nil, doesn't raise an exception
  - From: data[:mcu][0][:actors][1]
    To:   data.dig(:mcu, 0, :actors, 1)
*** Array []

- Enumerable
- [0,2,nil][1] Array.new
- #pop/#push      elements from the end
- #shift/#unshift elements from the beginning
- #compact        remove nil
- #sample         get random element
- %w[] to create array of strings
- %i[] to create array of strings
- [FROM,LENGTH]
- [FROM..END] [FROM...ENDNOTINC]
- can growth by displacing elements with [?,?]= or [?..?]
- [] is a method .[](0) is valid
- #each #reverse_each (#with_index)
- Linear list, accessed by index
- mixed type of objects
- #tally - counts frequency of elements into a hash

*** Hash {}

- {} {"foo" => "bar"}["foo"] { foo: "bar"}[:foo]
- an indexed collection of key/valuep pairs
- Enumerable
- remembers order of insertion
- supports "punning" for creation, if both are variable names in scope
  {firstname:, lastname:}
- key/value
- An association by an arbitrary key type
- Hash.new(0) # where 0 is the default value
- #sort_by - returns an array of arrays of 2 elements

** stdlib

- new format
  - https://ruby-doc.org/3.0.4/standard_library_rdoc.html
  - https://docs.ruby-lang.org/en/master/standard_library_rdoc.html
    - better colors
    - some clickable links
- old format https://ruby-doc.org/stdlib-3.0.4/
- list all versions, without descriptions https://rubydoc.info/stdlib

- guide 2.7 https://rubyreferences.github.io/rubyref/stdlib.html

- https://stdgems.org/
  - Every Ruby version ships a specific set of
    1) default gems
    2) default libraries
    3) and bundled gems

#+begin_comment
Script ran, to generate valid markdown from site's json. Then converted with  pandoc.
 $ < default_gems.json jq -r '.gems[] | "|[" + .gem + "](" + (.rdocLink[0]? // .rdocLink // "?") + ") | " + .description + "|"'
#+end_comment

*** Default Gems in Ruby 3.3.3
|--------------+------------------------------------------------------------------------------------------------------|
| name         | description                                                                                          |
|--------------+------------------------------------------------------------------------------------------------------|
| [[https://rubyapi.org/o/timeout][timeout]]      | Auto-terminates code blocks after the time limit is reached                                          |
| [[https://rubyapi.org/o/drb][drb]]          | Distributed object system for Ruby                                                                   |
| [[https://rubyapi.org/o/nkf][nkf]]          | [[https://en.wikipedia.org/wiki/Kanji][Kanji]] encoding converter. Can also be used via the [[https://github.com/ruby/nkf/blob/master/lib/kconv.rb][Kconv.kconv method]].                               |
| [[https://rubyapi.org/o/stringscanner][strscan]]      | Lexical string scanning                                                                              |
| [[https://rubyapi.org/o/win32ole][win32ole]]     | Windows [[https://en.wikipedia.org/wiki/OLE_Automation][OLE automation]] interface                                                                     |
| [[https://rubyapi.org/o/securerandom][securerandom]] | Provides cryptographical randomness from openssl or the OS                                           |
| [[https://rubyapi.org/o/english][english]]      | [[https://idiosyncratic-ruby.com/9-globalization.html][Readable aliases for special global variables]]                                                        |
| [[https://rubyapi.org/o/fiddle][fiddle]]       | Support for FFI ([[https://sourceware.org/libffi/][Foreign Function Interface]])                                                         |
| [[https://rubyapi.org/o/erb][erb]]          | Templating engine for Ruby                                                                           |
| [[https://rubyapi.org/o/tsort][tsort]]        | Topological sorting using [[https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm][Tarjan's algorithm]], which finds [[https://en.wikipedia.org/wiki/Strongly_connected_component][strongly connected components]] in [[https://en.wikipedia.org/wiki/Graph_%28abstract_data_type%29][graphs]]    |
| [[https://rubyapi.org/o/pstore][pstore]]       | Transactional file storage for Ruby objects                                                          |
| [[https://ruby-doc.org/stdlib-2.6.8/libdoc/cmath/rdoc/CMath.html][cmath]] ​       | Trigonometric and transcendental functions for complex numbers                                       |
| [[https://ruby-doc.org/stdlib-2.6.8/libdoc/scanf/rdoc/Scanf.html][scanf]]        | Pure-Ruby [[https://en.wikipedia.org/wiki/Scanf_format_string][scanf]] implementation                                                                       |
| [[https://gemdocs.org/gems/prism/0.19.0/][prism]]        | Prism is a portable, error tolerant, and maintainable recursive descent parser for the Ruby language |
| [[https://rubyapi.org/o/date][date]]         | The [[https://rubyapi.org/o/date][Date]] and [[https://rubyapi.org/o/datetime][DateTime]] classes                                                                        |
| [[https://www.rubydoc.info/stdlib/time/Time][time]]         | Adds more methods to =Time=                                                                          |
|--------------+------------------------------------------------------------------------------------------------------|
**** concurrency
|-------------+------------------------------------------------------------------------|
| [[https://rubyapi.org/o/mutex_m][mutex_m]]     | A mixin that makes any object behave like a [[https://ruby-doc.org/core/Mutex.html][mutex]]                      |
| [[https://ruby-doc.org/3.2.0/stdlibs/rinda/table_of_contents.html][rinda]]       | Support fot the [[https://en.wikipedia.org/wiki/Linda_%28coordination_language%29][Linda distributed computing paradigm]] in [[https://ruby-doc.org/stdlib/libdoc/drb/rdoc/index.html][drb]]            |
| [[https://ruby-doc.org/stdlib-2.6.8/libdoc/thwait/rdoc/ThWait.html][thwait]]      | Waits for threads to finish                                            |
| [[https://ruby-doc.org/stdlib-2.6.8/libdoc/sync/rdoc/Sync_m.html][sync]]        | [[https://en.wikipedia.org/wiki/Two-phase_locking][Two-phase lock]] with a counter for multi-threaded code                  |
| [[https://www.rubydoc.info/gems/io-wait][io-wait]]     | Adds methods to wait until an =IO= stream becomes readable or writable |
| [[https://www.rubydoc.info/gems/io-nonblock][io-nonblock]] | Allows to work with =IO= streams in a non-blocking way                 |
|-------------+------------------------------------------------------------------------|
**** dev / debug
|-----------------+------------------------------------------------------------------------------------------------------------|
| [[https://rubyapi.org/o/benchmark][benchmark]]       | Benchmark utility: Measures and reports the time used to execute code                                      |
| [[https://www.rubydoc.info/gems/bundler][bundler]]         | [[https://bundler.io][Bundler]] is the local package manager for Ruby applications                                                 |
| [[https://ruby-doc.org/stdlib-2.6.8/libdoc/e2mmap/rdoc/Exception2MessageMapper.html][e2mmap]] ​         | Abstraction around exception handling                                                                      |
| [[https://www.rubydoc.info/gems/error_highlight][error_highlight]] | Improves error messages with additional debug info                                                         |
| [[https://www.rubydoc.info/gems/irb][irb]]             | Interactive Ruby Console ([[https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop][REPL]])                                                                            |
| [[https://rubyapi.org/o/prettyprint][prettyprint]] ​    | Better object formatting and inspection. Also see the [[/pp/][pp gem]].                                              |
| [[https://rubyapi.org/o/pp][pp]]              | The =pp= print debugging helper via =require 'pp'=. It will format the result object in more readable way. |
| [[https://www.rubydoc.info/gems/ruby2_keywords][ruby2_keywords]]  | A shim gemspec to indicate that the Ruby implementation includes the =ruby2_keywords= method               |
| [[https://rubyapi.org/o/gem][rubygems]]        | [[https://rubygems.org][RubyGems]] allows you to download, install, and use Ruby software packages on your system                    |
| [[https://ruby.github.io/rdoc/][rdoc]]            | Ruby documentation generator                                                                               |
| [[https://rubyapi.org/o/syntaxsuggest][syntax_suggest]]  | Assists with code recommendation to resolve Ruby syntax errors                                             |
| [[https://ruby-doc.org/stdlib-3.0.2/libdoc/tracer/rdoc/Tracer.html][tracer]]          | Outputs the [[https://en.wikipedia.org/wiki/Tracing_%28software%29][code execution trace]] via [[https://ruby-doc.org/core/Kernel.html#method-i-set_trace_func][Kernel#set_trace_func]]                                                 |
|-----------------+------------------------------------------------------------------------------------------------------------|
**** datastructures
|-------------+------------------------------------------------------------------------------------------------------------------|
| [[https://rubyapi.org/o/bigdecimal][bigdecimal]]  | Support for arbitrary-precision floating point decimal arithmetic                                                |
| [[https://rubyapi.org/o/delegator][delegate]]    | Provides three ways to [[https://en.wikipedia.org/wiki/Delegation_pattern][delegate]] method calls                                                                     |
| [[https://rubyapi.org/o/forwardable][forwardable]] | Provides a way to [[https://en.wikipedia.org/wiki/Delegation_pattern][delegate]] method calls. Also see [[http://radar.oreilly.com/2014/02/delegation-patterns-in-ruby.html][this overview of delegation in Ruby]], which contains an example |
| [[https://rubyapi.org/o/set][set]]         | Data structure for unordered collections without duplicates. Implemented on top of Hash.                         |
| [[https://rubyapi.org/o/openstruct][ostruct]]     | Wrapper around [[https://ruby-doc.org/core/Hash.html][Hash]] which lets you read and set attributes with a method-based API                               |
| [[https://rubyapi.org/o/observable][observer]]    | Implementation of the [[https://en.wikipedia.org/wiki/Observer_pattern][observer pattern]], away to let interested other objects know o an objetc's updates          |
| [[https://rubyapi.org/o/weakref][weakref]]     | Explicitly allow objects to be garbage collected                                                                 |
| [[https://rubyapi.org/o/stringio][stringio]]    | Makes strings behave like IO objects                                                                             |
| [[https://rubyapi.org/o/singleton][singleton]]   | Mixin for Ruby classes that should only have one instance                                                        |
|-------------+------------------------------------------------------------------------------------------------------------------|
**** os
|-----------------+-------------------------------------------------------------------------------------------------------------------------------------|
| [[https://rubyapi.org/o/etc][etc]]             | Access UNIX info from =/etc=                                                                                                        |
| [[https://rubyapi.org/o/fcntl][fcntl]]           | Loads values from the OS' =fcntl.h= to be used for low-level [[https://en.wikipedia.org/wiki/File_descriptor][file descriptor manipulation]] system calls with [[https://ruby-doc.org/core/IO.html#method-i-fcntl][IO#fcntl]] and [[https://ruby-doc.org/core/IO.html#method-c-sysopen][IO.sysopen]] |
| [[https://rubyapi.org/o/find][find]]            | Finds all files in a given directory and its sub-directories                                                                        |
| [[https://rubyapi.org/o/fileutils][fileutils]]       | Utilities for working with the file system, such as copying, moving, or deleting files                                              |
| [[https://rubyapi.org/o/open3][open3]]           | Simple spawning of child processes                                                                                                  |
| [[https://rubyapi.org/o/pathname][pathname]]        | Wraps =File=, =FileTest=, =Dir=, and =FileUtils= to ease working with file system paths                                             |
| [[https://rubyapi.org/o/logger][logger]]          | [[https://ruby.janlelis.de/50-exploring-the-stdlib-logger][Logging utility]]                                                                                                                     |
| [[https://rubyapi.org/o/syslog][syslog]]          | Interface to the low-level [[https://en.wikipedia.org/wiki/Syslog][syslog]] logger                                                                                            |
| [[https://rubyapi.org/o/tempfile][tempfile]]        | Simplifies OS independent creation of temporary files                                                                               |
| [[https://www.rubydoc.info/stdlib/tmpdir/Dir][tmpdir]]          | Adds a =Dir.mktmpdir= method for creating temporary directories OS independently                                                    |
| [[https://www.rubydoc.info/stdlib/un][un]]              | [[https://idiosyncratic-ruby.com/6-run-ruby-run.html][Utilities to replace common UNIX commands]]                                                                                           |
|-----------------+-------------------------------------------------------------------------------------------------------------------------------------|
**** cli
|-----------------+-------------------------------------------------------------------------------------------------------------------------------------|
| [[https://rubyapi.org/o/optionparser][optparse]]        | Command-line option parser                                                                                                          |
| [[https://rubyapi.org/o/getoptlong][getoptlong]]      | [[https://linux.die.net/man/3/getopt_long][GNU getopt_long()]] style command-line option parsing                                                                                 |
| [[https://www.rubydoc.info/gems/io-console][io-console]]      | Patches =IO= for simple and portable access to the console                                                                          |
| [[https://rubyapi.org/o/reline][reline]]          | Ruby-only implementation of [[https://directory.fsf.org/wiki/Readline][GNU Readline]] / [[https://thrysoee.dk/editline/][NetBSD Editline]]                                                                          |
| [[https://rubyapi.org/o/readline][readline]]        | If available, [[https://stdgems.org/readline-ext][readline-ext]] will be loaded, or (Ruby-only) default gem [[https://stdgems.org/reline][reline]] will be used.                                          |
| [[https://rubyapi.org/o/readline][readline-ext]]    | Interface to [[https://directory.fsf.org/wiki/Readline][GNU Readline]] and [[https://thrysoee.dk/editline/][NetBSD Editline]]                                                                                       |
| [[https://rubyapi.org/o/shellwords][shellwords]]      | Escape and manipulate commands to be run in the [[https://en.wikipedia.org/wiki/Bourne_shell][shell]]                                                                               |
| +[[https://ruby-doc.org/stdlib-2.6.8/libdoc/shell/rdoc/Shell.html][shell]]+         | +Provides a Ruby interface for interacting with the [[https://en.wikipedia.org/wiki/Bourne_shell][shell]]+                                                                          |
|-----------------+-------------------------------------------------------------------------------------------------------------------------------------|
**** net/http
|----------+------------------------------------------------------------------------------------|
| [[https://rubyapi.org/o/cgi][cgi]]      | Support for CGI ([[https://en.wikipedia.org/wiki/Common_Gateway_Interface][Common Gateway Interface]])                                         |
| [[https://rubyapi.org/o/digest][digest]]   | Provides common [[https://en.wikipedia.org/wiki/Hash_function][hash functions]] like MD5, SHA1, SHA2, or RIPEMD-160                 |
| [[https://rubyapi.org/o/net/http][net-http]] | Support for HTTP ([[https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol][Hypertext Transfer Protocol]])                                     |
| [[https://rubyapi.org/o/openuri][open-uri]] | Monkeypatches [[https://ruby-doc.org/core/Kernel.html#method-i-open][Kernel#open]] to support remote endpoints via =net/http= and =net/ftp= |
| [[https://ruby.github.io/openssl/][openssl]]  | Wraps [[https://www.openssl.org/][OpenSSL]] for cryptographic functionality                                      |
| [[https://rubyapi.org/o/uri][uri]]      | [[https://en.wikipedia.org/wiki/Uniform_resource_identifier][URI]]/URL manipulation                                                               |
| [[https://ruby-doc.org/stdlib-2.7.4/libdoc/webrick/rdoc/WEBrick.html][webrick]]  | HTTP Server                                                                        |
|----------+------------------------------------------------------------------------------------|
**** net
|----------------+----------------------------------------------|
| [[https://ruby-doc.org/stdlib-3.0.2/libdoc/net/protocol/rdoc/index.html][net-protocol]] ​  | Internal class for the other net-* libraries |
| [[https://rubyapi.org/o/ipaddr][ipaddr]]         | [[https://en.wikipedia.org/wiki/IP_address][IP address]] manipulation (IPv4 and IPv6)      |
| [[https://rubyapi.org/o/resolv][resolv]]         | Thread-aware [[https://en.wikipedia.org/wiki/Domain_Name_System][DNS]] resolver                    |
| [[https://rubyapi.org/o/resolv][resolv-replace]] | Will replace [[https://ruby-doc.org/stdlib/libdoc/socket/rdoc/Socket.html][Socket]]'s DNS with [[https://stdgems.org/resolv][resolv]]        |
|----------------+----------------------------------------------|
**** file formats
|-------+--------------------------------------------------------------|
| [[https://rubyapi.org/o/csv][csv]]   | Support for CSV ([[https://en.wikipedia.org/wiki/Comma-separated_values][Comma-separated Values]])                     |
| [[https://ruby-doc.org/stdlib-3.0.2/libdoc/dbm/rdoc/DBM.html][dbm]]   | Support for [[https://en.wikipedia.org/wiki/DBM_(computing)][DBM databases]]                                    |
| [[https://ruby-doc.org/stdlib-3.0.2/libdoc/gdbm/rdoc/GDBM.html][gdbm]] ​ | Support for [[https://en.wikipedia.org/wiki/Dbm][GDBM databases]]                                   |
| [[https://rubyapi.org/o/json][json]]  | Support for JSON ([[https://en.wikipedia.org/wiki/JSON][JavaScript Object Notation]])                |
| [[https://ruby-doc.org/stdlib-2.7.4/libdoc/sdbm/rdoc/SDBM.html][sdbm]]  | Support for [[https://en.wikipedia.org/wiki/Dbm][SDBM databases]]                                   |
| [[https://rubyapi.org/o/psych][psych]] | Support for YAML ([[https://en.wikipedia.org/wiki/YAML][YAML Ain't Markup Language]])                |
| [[https://rubyapi.org/o/yaml][yaml]]  | *yaml* will load the [[https://stdgems.org/psych/][psych default gem]]                       |
| -     | *yaml/dbm* is a wrapper around [[https://stdgems.org/dbm/][DBM]] using YAML serialization, |
| -     | *yaml/store* lets you use [[https://stdgems.org/pstore/][pstore]] with YAML                   |
| [[https://rubyapi.org/o/zlib][zlib]]  | Interface to the [[https://en.wikipedia.org/wiki/Zlib][zlib compression library]]                    |
|-------+--------------------------------------------------------------|
*** Default Libraries
|-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------|
| [[https://ruby-doc.org/core/Continuation.html][continuation]]      | Adds the [[https://idiosyncratic-ruby.com/24-goto-fail.html][goto]]-like [[https://ruby-doc.org/core/Kernel.html#method-i-callcc][Kernel#callcc]]                                                                                                                  |
| [[https://rubyapi.org/o/coverage][coverage]]          | Measures [[https://en.wikipedia.org/wiki/Code_coverage][code coverage]]                                                                                                                            |
| [[https://rubyapi.org/o/makemakefile][mkmf]]              | Generates [[https://en.wikipedia.org/wiki/Makefile][Makefiles]] for native [[https://github.com/ruby/ruby/blob/master/doc/extension.rdoc][C extensions]]                                                                                                       |
| [[https://rubyapi.org/o/monitor][monitor]]           | [[https://en.wikipedia.org/wiki/Monitor_%28synchronization%29][Monitors]] for multi-threaded code                                                                                                                  |
| [[https://www.rubydoc.info/stdlib/objspace/ObjectSpace][objspace]]          | Adds more statistics methods to `ObjectSpace`. Since Ruby 3.1, it also includes the `objspace/trace` debug utility.                               |
| [[https://rubyapi.org/o/pty][pty]]               | Manages [[https://en.wikipedia.org/wiki/Pseudo_terminal][pseudo terminals]]. Also includes the [[https://ruby-doc.org/stdlib-3.0.2/libdoc/pty/rdoc/IO.html#method-i-expect][IO#expect method]] via `require 'expect'`, which can be used to wait for a specific pattern to be read. |
| rbconfig          | `RbConfig` is a [[https://idiosyncratic-ruby.com/42-ruby-config.html][Ruby constant that contains compile time information]]                                                                              |
| [[https://rubyapi.org/o/ripper][ripper]]            | Ruby parser that creates a [[https://en.wikipedia.org/wiki/S-expression][symbolic expression tree]]                                                                                               |
| [[https://rubyapi.org/o/socket][socket]]            | Support for [[https://en.wikipedia.org/wiki/Unix_domain_socket][unix-]] and [[https://en.wikipedia.org/wiki/Network_socket][network sockets]]                                                                                                             |
| [[https://www.rubydoc.info/stdlib/unicode_normalize/UnicodeNormalize][unicode_normalize]] | Adds a [[https://rubyapi.org/o/string#method-i-unicode_normalize][String#unicode_normalize]] method which [[https://unicode.org/reports/tr15/][normalizes unicode strings]]                                                                           |
| [[https://rubyapi.org/o/win32][win32]]             | Let's you use Windows APIs, e.g. call functions in DLLs                                                                                           |
|-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------|
*** Bundled Gems in Ruby 3.3.3
|--------------+------------------------------------------------------------------------------------------------------------|
| name         | description                                                                                                |
|--------------+------------------------------------------------------------------------------------------------------------|
| [[https://www.rubydoc.info/gems/did_you_mean][did_you_mean]] | Patches error messages to suggest correct spelling of methods/classes/variables                            |
| [[https://rubyapi.org/o/racc][racc]]         | Bindings for Racc, a [[https://en.wikipedia.org/wiki/Yacc][YACC]]-like [[https://en.wikipedia.org/wiki/LALR_parser_generator][LALR(1) parser generator]]                                                    |
| [[https://www.rubydoc.info/gems/rake][rake]]         | A Ruby task runner, inspired by [[https://en.wikipedia.org/wiki/Make_%28software%29][make]]                                                                       |
| [[https://www.rubydoc.info/gems/debug][debug]]        | Command-line [debugger](https://en.wikipedia.org/wiki/Debugger)                                            |
| [[https://www.rubydoc.info/gems/power_assert][power_assert]] | Debug tool that displays intermediate results of a method chain                                            |
| [[https://www.rubydoc.info/gems/test-unit][test-unit]]    | A xUnit family unit testing framework (compatibility layer for minitest)                                   |
| [[https://www.rubydoc.info/gems/minitest][minitest]]     | Test/spec framework, comes with mocking and benchmark capabilities                                         |
|--------------+------------------------------------------------------------------------------------------------------------|
| [[https://www.rubydoc.info/gems/rbs][rbs]]          | Released with Ruby 3.0, RBS is a way to declare types in Ruby. parsing and processing RBS type definitions |
| [[https://www.rubydoc.info/gems/typeprof][typeprof]]     | Released with Ruby 3.0, typeprof allows you to [[https://github.com/ruby/typeprof/blob/master/doc/doc.md][automatically generate RBS type annotations]]                 |
|--------------+------------------------------------------------------------------------------------------------------------|
| [[https://www.rubydoc.info/gems/matrix][matrix]]       | Support for [matrices](https://en.wikipedia.org/wiki/Matrix_%28mathematics%29)                             |
| [[https://www.rubydoc.info/gems/prime][prime]]        | Access to prime numbers and prime factorization                                                            |
|--------------+------------------------------------------------------------------------------------------------------------|
| [[https://www.rubydoc.info/gems/rss][rss]]          | Support for RSS ([[https://en.wikipedia.org/wiki/RSS][Rich Site Summary]]) and [[https://en.wikipedia.org/wiki/Atom_%28standard%29][Atom]]                                                               |
| [[https://www.rubydoc.info/gems/rexml][rexml]]        | Support for XML ([[https://en.wikipedia.org/wiki/XML][Extensible Markup Language]])                                                               |
|--------------+------------------------------------------------------------------------------------------------------------|
| [[https://www.rubydoc.info/gems/xmlrpc][xmlrpc]]       | [[https://en.wikipedia.org/wiki/XML-RPC][Remote Procedure Calls via XML and HTTP]]                                                                    |
| [[https://www.rubydoc.info/gems/net-ftp][net-ftp]]      | Support for FTP ([[https://en.wikipedia.org/wiki/File_Transfer_Protocol][File Transfer Protocol]])                                                                   |
| [[https://www.rubydoc.info/gems/net-imap][net-imap]]     | Support for IMAP ([[https://en.wikipedia.org/wiki/Internet_Message_Access_Protocol][Internet Message Access Protocol]])                                                        |
| [[https://www.rubydoc.info/gems/net-pop][net-pop]]      | Support for POP3 ([[https://en.wikipedia.org/wiki/Post_Office_Protocol][Post Office Protocol]])                                                                    |
| [[https://www.rubydoc.info/gems/net-smtp][net-smtp]]     | Support for SMTP ([[https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol][Simple Mail Transfer Protocol]])                                                           |
| [[https://www.rubydoc.info/gems/net-telnet][net-telnet]]   | Support for [[https://en.wikipedia.org/wiki/Telnet][Telnet]]                                                                                         |
|--------------+------------------------------------------------------------------------------------------------------------|
** concurrency - threads

#+begin_src ruby
  (1..10).map do |i|
    Thread.new do
      `wget http://example.com/file_00#{i}`
    end
  end.each { |thread| thread.join }
#+end_src


* codebases

- http://ratfactor.com/repos/
  - static site generator http://ratfactor.com/repos/reporat/
  - crawler http://ratfactor.com/repos/chklnks.rb/
  - http://ratfactor.com/repos/rubylit/
  - vim+bookmarks
    - http://ratfactor.com/repos/rat-tools/html/new-book.html
    - http://ratfactor.com/cards/interactive-vim
- rails
  - +puma https://github.com/mastodon/mastodon
  - https://github.com/lobsters/lobsters
  - https://github.com/discourse/discourse

* snippets

#+begin_src ruby :exports both
  `xrandr`.scan(/current (\d+) x (\d+)/)
    .flatten
    .map(&:to_i)
#+end_src

#+RESULTS:
| 1600 | 900 |

#+NAME: split into words
#+begin_src ruby :exports both
  "FOO Bar Foo".downcase.scan(/[\w']+/)
#+end_src

#+RESULTS: split into words
| foo | bar | foo |

* tools

- tool: ri (Ruby API reference frontend)
- tool: version managers
  - https://github.com/rbenv/rbenv
    - /.ruby-version
    - ~/.rbenv/versions/
    - commands
      - rbenv init
      - eval "$(rbenv init - zsh)"
      - rbenv install -l
      - rbenv install 3.3.0
      - rbenv versions
      - rbenv rehash
  - https://rvm.io/
  - https://github.com/postmodern/chruby
- tool: seeing is believing
  - https://github.com/JoshCheek/seeing_is_believing
  - https://github.com/jcinnamond/seeing-is-believing

* implementations
|----------+---------------------------------------|
| graalvm  | https://github.com/oracle/truffleruby |
| jvm      | https://www.jruby.org                 |
| mobile   | http://www.rubymotion.com/            |
| embedded | https://mruby.org/                    |
|----------+---------------------------------------|
