- book
  https://learnbyexample.github.io/learn_gnused/
  https://github.com/learnbyexample/learn_gnused
- book https://www.grymoire.com/Unix/Sed.html
- book https://www.ehdp.com/press/sed-book/

* TODO 99 | Unix Power Tools | O'reilly

- Authors
  - Shelley Powers
  - Jerry Peek
  - Tim O'Reilly
  - Mike Loukides

34 The ~sed~ Stream Editor

- "^H" is an ascii backspace character
- "^H^H^H^H" is the meme of putting it to show that you didn't want to show something when you wanted to

- $ cat /etc/hosts | sed -f test.sed | diff /etc/hosts -

- If you find that you need more than 9 saved matches,
  or would like to be able to group them into matches and submatches,
  take a look at Perl.

- rot13 is sometimes used to keep offensive/comical from being read except by someone who really means to

- Example: using /hold space/ to keep <h>eader in it, and later print a summary
  #+begin_src sed
    /^<h[12]>/H   # puts headers into hold space
    /^<\/body>/ { # insert before </body>
        i\
    <strong>Summary:</strong>
        x
        G               # xG used like this, is a way to insert holdspace before current line
        s/<\/*h[12]>//g # remove <h>eader tags
    }
  #+end_src

- Example: using the hold space, to isolate an action (in this case uppercase)
  #+begin_src sed
    # capitalize statement names
    /the .* statement/ {
        h
        s/.*the \(.*\) statement.*/\1/
        y/abc...xyz/ABC...XYZ/ # ...elided
        G
        s/\(.*\)\n\(.*the \).*\( statement.*\)/\2\1\3/
    }
  #+end_src

- Example: replace multiline phrase
  #+begin_src sed
    s/Owner and Operator Guide/Installation Guide/
    /Owner/{
        $!N       # appends next line, but excludes last line
        s/ *\n/ / # remove embedded newline, wherever it is
        s/Owner and Operator Guide */Installation Guide\n/
    }
  #+end_src

TODO 686 - 34.16

* TODO sed & awk

- official source fork
  https://github.com/adam-fabricio/sed_awk_oreilly/tree/main/utils/sedawk2progs

*** 4 Writing /sed/ scripts

- is NOT that /sed/ applies individual editing commands to ALL lines.
  But, /sed/ applies the ENTIRE editing script to one line at the time.

- compares two files, silenty byte by byte. If differ return code is 1.
  $ cmp --silent file1 fil2

- Types of sed scripts
  1) Multiple edits to the same file (multiple operations)
  2) Making changes across a set of files (multiple input files)
  3) Extracting contents of a file (address range)
  4) Edits to go (as part of a pipe)

- The order of commands is important,
  eg: non printed substituion should happen before, something that prints

- Examples on this chapter deal with a lot of TROFF file format
  an his utils (tbl,nroff,col,pic,eql)

- # aka "octothorp", for comments
  - on systemV version it is only allowed on the first line of the script
  - #n to not produce output (aka -n)
