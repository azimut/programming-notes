- https://github.com/ocaml-multicore/awesome-multicore-ocaml
  https://v2.ocaml.org/releases/5.0/manual/parallelism.html
  https://v2.ocaml.org/releases/5.0/manual/effects.html
- editor https://tarides.com/blog/2022-12-21-advanced-merlin-features-destruct-and-construct
- profiling https://github.com/ocaml-bench/notes/blob/master/profiling_notes.md
- optimizing http://ocamlverse.net/content/optimizing_performance.html
- https://batsov.com/articles/2022/08/29/ocaml-at-first-glance/
  https://lobste.rs/s/dwt32y/ocaml_at_first_glance
- https://www.cl.cam.ac.uk/teaching/1617/L28/materials.html
- Promises https://cs3110.github.io/textbook/chapters/ds/promises.html?highlight=async
- https://smlfamily.github.io/
- Style guide https://www.cs.cornell.edu/courses/cs3110/2016fa/handouts/style.html
- Github Action: build docs
  https://github.com/smimram/monadic-synth/blob/master/.github/workflows/build.yml
- Manual https://ocaml.org/manual/index.html
- Manual https://caml.inria.fr/pub/old_caml_site/ocaml/htmlman/index.html
- Tutorial:
  https://o1-labs.github.io/ocamlbyexample/
  https://github.com/o1-labs/ocamlbyexample
- Tutorial: https://ocaml.org/learn/tutorials/up_and_running.html
- Tutorial: https://web.archive.org/web/20091214115026/http://www.ocaml-tutorial.org/streams
- Tutorial: http://xahlee.info/ocaml/ocaml_basics.html
- Tutorial: https://lambdafoo.com/posts/2021-10-29-getting-started-with-ocaml.html
- Tutorial: Cheatsheet https://github.com/OCamlPro/ocaml-cheat-sheets
- Tutorial: 2006 - OCaml for the Skeptical https://www2.lib.uchicago.edu/keith/ocaml-class/class-01.html
- Tutorial: 2016 https://github.com/caiorss/Functional-Programming/tree/master/ocaml
- Tutorial: 2019 https://github.com/alhassy/OCamlCheatSheet
- Tutorial: 2019 https://github.com/lindig/ocaml-style
- https://github.com/imandra-ai/ocaml-tracy
- exercises (based on "Perl Cookbook") https://pleac.sourceforge.net/pleac_ocaml/index.html

* Language
** Standard Library
- https://v2.ocaml.org/manual/stdlib.html
  example module url https://v2.ocaml.org/api/Seq.html
|----------------+------------------------------------------------------------|
| =Module=       | =Description=                                              |
|----------------+------------------------------------------------------------|
| Arg            | parsing of command line arguments                          |
| Array          | array operations                                           |
| ArrayLabels    | array operations (with labels)                             |
| Atomic         | atomic references                                          |
| Bigarray       | large, multi-dimensional, numerical arrays                 |
| Bool           | boolean values                                             |
| Buffer         | extensible buffers                                         |
| Bytes          | byte sequences                                             |
| BytesLabels    | byte sequences (with labels)                               |
| Callback       | registering OCaml values with the C runtime                |
| Char           | character operations                                       |
| Complex        | complex numbers                                            |
| Condition      | condition variables to synchronize between threads         |
| Domain         | Domain spawn/join and domain local variables               |
| Digest         | MD5 message digest                                         |
| Effect         | deep and shallow effect handlers                           |
| Either         | either values                                              |
| Ephemeron      | Ephemerons and weak hash table                             |
| Filename       | operations on file names                                   |
| Float          | floating-point numbers                                     |
| Format         | pretty printing                                            |
| Fun            | function values                                            |
| Gc             | memory management control and statistics; finalized values |
| Hashtbl        | hash tables and hash functions                             |
| In_channel     | input channels                                             |
| Int            | integers                                                   |
| Int32          | 32-bit integers                                            |
| Int64          | 64-bit integers                                            |
| Lazy           | deferred computations                                      |
| Lexing         | the run-time library for lexers generated by ocamllex      |
| List           | list operations                                            |
| ListLabels     | list operations (with labels)                              |
| Map            | association tables over ordered types                      |
| Marshal        | marshaling of data structures                              |
| MoreLabels     | include modules Hashtbl, Map and Set with labels           |
| Mutex          | locks for mutual exclusion                                 |
| Nativeint      | processor-native integers                                  |
| Oo             | object-oriented extension                                  |
| Option         | option values                                              |
| Out_channel    | output channels                                            |
| Parsing        | the run-time library for parsers generated by ocamlyacc    |
| Printexc       | facilities for printing exceptions                         |
| Printf         | formatting printing functions                              |
| Queue          | first-in first-out queues                                  |
| Random         | pseudo-random number generator (PRNG)                      |
| Result         | result values                                              |
| Runtime_events | Runtime event tracing                                      |
| Scanf          | formatted input functions                                  |
| Seq            | functional iterators                                       |
| Set            | sets over ordered types                                    |
| Semaphore      | semaphores, another thread synchronization mechanism       |
| Stack          | last-in first-out stacks                                   |
| StdLabels      | include modules Array, List and String with labels         |
| String         | string operations                                          |
| StringLabels   | string operations (with labels)                            |
| Sys            | system interface                                           |
| Uchar          | Unicode characters                                         |
| Unit           | unit values                                                |
| Weak           | arrays of weak pointers                                    |
|----------------+------------------------------------------------------------|
** Types
|------------+------------------------+---------+-----------+---------------------------------+--------+----------------|
| Type       | Init                   | Access  | Modifying | Pattern Matching                | Adding | Appending      |
|------------+------------------------+---------+-----------+---------------------------------+--------+----------------|
| ~Unit~     | ()                     |         |           |                                 |        |                |
| ~Bool~     | x = true,false         |         |           |                                 | &&,¦¦  |                |
| ~Option~   | Some a                 |         |           |                                 |        |                |
| ~String~   | "abcd"                 | .[2]    | <-        |                                 |        | ^              |
| variant    |                        |         |           |                                 |        |                |
| mutable    |                        |         | <-        |                                 |        |                |
| refs       | ref <expr>             | !x      | :=        |                                 |        |                |
|------------+------------------------+---------+-----------+---------------------------------+--------+----------------|
| ~Array~    | [¦ a ; b ¦]            | .(2)    | <-        | let [¦ a ; b ¦] = some_array    |        |                |
| ~Bigarray~ |                        | .{2}    | <-        |                                 |        |                |
| tuples     | (a , b)                |         |           | let (x , y)  =                  |        |                |
| ~List~     | [a ; a]                | List.hd |           | let (x :: y) =                  | ::     | @, List.append |
| struct     | struct let foo = 3 end |         |           |                                 |        |                |
|------------+------------------------+---------+-----------+---------------------------------+--------+----------------|
| record     | {a = VAL ; b = VAL}    | .a      |           | let { x = x_pos ; y = y_pos } = |        |                |
|            | a=VAL; B=VAL; {a ; b}  |         |           | let { x ; y } =                 |        |                |
|            |                        |         |           | let v1 = v1.x + v2.y            |        |                |
|------------+------------------------+---------+-----------+---------------------------------+--------+----------------|

* Editor
- https://github.com/ocaml-ppx/ocamlformat/blob/main/doc/editor_setup.mld
- https://github.com/Gopiandcode/gopcaml-mode
  https://www.youtube.com/watch?v=vy6oGSk7A3s
  - needs emacs packages: merlin, ocp-indent, and tuareg
* Libraries
|---------------------------+-----+------------------------------------------------------------------|
| scientific library        | 1.1 | https://github.com/owlbarn/owl                                   |
| parser combinator         | 0.5 | https://github.com/inhabitedtype/angstrom                        |
| ppx json parser generator | 0.1 | https://github.com/ocaml-ppx/ppx_deriving_yojson                 |
| ppx generate cmdline      | 0.1 | https://github.com/hammerlab/ppx_deriving_cmdliner               |
| unicode support           | 0.1 | https://github.com/yoriyuki/Camomile                             |
|---------------------------+-----+------------------------------------------------------------------|
| async execution           | 0.1 | https://github.com/janestreet/async                              |
| multi-core                | 0.3 | https://github.com/ocaml-multicore/eio                           |
| promises/concurrent       | 0.6 | https://github.com/ocsigen/lwt                                   |
| multicore examples        | 0.1 | https://github.com/ocaml-multicore/awesome-multicore-ocaml       |
|---------------------------+-----+------------------------------------------------------------------|
| test                      | 0.3 | https://github.com/mirage/alcotest                               |
| test code coverage        | 0.2 | https://github.com/aantron/bisect_ppx                            |
| documentation             | 0.2 | https://github.com/ocaml/odoc                                    |
|---------------------------+-----+------------------------------------------------------------------|
| http client               | 0.1 | https://github.com/anmonteiro/piaf                               |
| http client (libcurl)     | 0.1 | https://github.com/ygrek/ocurl                                   |
| http client (lwt/async)   | 0.6 | https://github.com/mirage/ocaml-cohttp                           |
|---------------------------+-----+------------------------------------------------------------------|
| http server               |     | https://github.com/inhabitedtype/ocaml-webmachine                |
| http server               |     | https://github.com/mirage/ocaml-cohttp                           |
| http server               |     | https://github.com/dinosaure/multipart_form                      |
|---------------------------+-----+------------------------------------------------------------------|
| web framework             | 1.0 | https://github.com/aantron/dream                                 |
|                           |     | https://aantron.github.io/dream/                                 |
|---------------------------+-----+------------------------------------------------------------------|
| utils                     | 0.4 | https://github.com/ocaml-batteries-team/batteries-included       |
|                           |     | https://ocaml-batteries-team.github.io/batteries-included/hdoc2/ |
| utils                     | 0.4 | https://github.com/c-cube/ocaml-containers                       |
| utils                     | 0.6 | https://github.com/janestreet/base                               |
| utils                     | 0.9 | https://github.com/janestreet/core                               |
|---------------------------+-----+------------------------------------------------------------------|
| smtp client server        |     | https://github.com/janestreet/async_smtp                         |
| email parser              |     | https://github.com/janestreet/email_message                      |
|---------------------------+-----+------------------------------------------------------------------|
- https://github.com/ocaml-community/awesome-ocaml
- Project: LWT/Telegram bot https://github.com/quernd/SushiBot
- Project: Synth https://github.com/smimram/monadic-synth
- https://janmidtgaard.dk/quickcheck/index.html
- RPI https://github.com/dinosaure/gilbraltar
* Codebase
- https://soap.coffee/~lthms/news/CFTSpatialShell.html
- protohackers using Eio https://github.com/TheLortex/protocaml
