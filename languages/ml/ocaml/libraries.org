|---------------------------+-----|
| [[https://github.com/janestreet/ppx_jane][bundled of ppx's]]          | 0.1 |
| [[https://github.com/janestreet/ppx_fields_conv][autogenerate accessors]]    | 0.1 |
| [[https://github.com/janestreet/fieldslib][autogenerate accessors]]    | 0.1 |
|---------------------------+-----|
| [[https://github.com/owlbarn/owl][scientific library]]        | 1.1 |
| [[https://github.com/inhabitedtype/angstrom][parser combinator]]         | 0.5 |
| [[https://github.com/ocaml-ppx/ppx_deriving_yojson][ppx json parser generator]] | 0.1 |
| [[https://github.com/hammerlab/ppx_deriving_cmdliner][ppx generate cmdline]]      | 0.1 |
| [[https://github.com/yoriyuki/Camomile][unicode support]]           | 0.1 |
|---------------------------+-----|
| [[https://github.com/janestreet/async][async execution]]           | 0.1 |
| [[https://github.com/ocaml-multicore/eio][multi-core]]                | 0.3 |
| [[https://github.com/ocsigen/lwt][promises/concurrent]]       | 0.6 |
| [[https://github.com/ocaml-multicore/awesome-multicore-ocaml][multicore examples]]        | 0.1 |
|---------------------------+-----|
| [[https://github.com/mirage/alcotest][test]]                      | 0.3 |
| [[https://github.com/aantron/bisect_ppx][test code coverage]]        | 0.2 |
| [[https://github.com/ocaml/odoc][documentation]]             | 0.2 |
|---------------------------+-----|
| [[https://github.com/janestreet/async_smtp][smtp client server]]        |     |
| [[https://github.com/janestreet/email_message][email parser]]              |     |
|---------------------------+-----|
- https://github.com/ocaml-community/awesome-ocaml
- Project: LWT/Telegram bot https://github.com/quernd/SushiBot
- Project: Synth https://github.com/smimram/monadic-synth
- https://janmidtgaard.dk/quickcheck/index.html
- RPI https://github.com/dinosaure/gilbraltar
* benchmarking

- corebench
  #+begin_src ocaml
    #require "core_bench"
    open Core_bench

    let rec sum l =
      match l with
      | [] -> 0
      | hd :: tl -> hd + sum tl

    let rec sum_if l =
      if List.is_empty l then 0
      else List.hd_exn l + sum_if (list.tl_exn 1)

    let numbers = List.range 0 1000 in
    [ Bench.Test.create ~name:"sum_if" (fun () -> sum_if numbers)
    ; Bench.Test.create ~name:"sum" (fun () -> sum numbers)]
    |> Bench.bench
  #+end_src

* utils
- batteries https://ocaml-batteries-team.github.io/batteries-included/hdoc2/
|------------+-----|
| [[https://github.com/ocaml-batteries-team/batteries-included][batteries]]  | 0.4 |
| [[https://github.com/c-cube/ocaml-containers][containers]] | 0.4 |
| [[https://github.com/janestreet/base][base]]       | 0.6 |
| [[https://github.com/janestreet/core][core]]       | 0.9 |
|------------+-----|
* web
|-------------------------+-----|
| [[https://github.com/anmonteiro/piaf][http client]]             | 0.1 |
| [[https://github.com/ygrek/ocurl][http client (libcurl)]]   | 0.1 |
| [[https://github.com/mirage/ocaml-cohttp][http client (lwt/async)]] | 0.6 |
| [[https://aantron.github.io/lambdasoup/][html scraping]]           | 0.3 |
|-------------------------+-----|
| [[https://github.com/inhabitedtype/ocaml-webmachine][http server]]             |     |
| [[https://github.com/mirage/ocaml-cohttp][http server]]             |     |
| [[https://github.com/dinosaure/multipart_form][http server]]             |     |
|-------------------------+-----|
| [[https://github.com/aantron/dream][web framework]]           | 1.0 |
| [[https://aantron.github.io/dream/][web framework]]           |     |
|-------------------------+-----|
