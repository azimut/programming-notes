#+TITLE: Elm
#+DATE: <2023-04-09 dom>

- https://en.wikipedia.org/wiki/Elm_(programming_language)
  - no higher kind polymorphism
    - no generic map, there is List.map and Set.map
  - no typeclass support
  - high boilerplate code

- https://github.com/hmsk/vite-plugin-elm
- "Successors"
  - 1.9k https://github.com/roc-lang/roc
    https://www.roc-lang.org/tutorial
  - (fork) https://gren-lang.org/

- each file in Elm is a *module* and MUST have a module statement

* language

- to be consistent with stdlib, make the datastructure the last argument of your functions
  then you will be able to |> pipe freely

- comparing (==) 2 functions would throw a ~runtime exception~

- a "blank" html is "text """

** style

- https://elm-lang.org/docs/style-guide
- https://elmprogramming.com/indentation.html
- ModuleName
- variableName
- functionName
- fieldName
- Type
- Constructor
- comments
  - --
  - {- -}

** model / view / update

#+begin_src
subscription--(Msg)-> update --(Model)--> view
      ^                ^  ¦                ¦
      ¦                ¦  ¦                ¦
   (Model)          (Msg)(Cmd Msg)     (Html Msg)
      ¦                ¦  ¦                ¦
      ¦                ¦  v                v
===============================================
                ELM RUNTIME
#+end_src

*** Browser
https://package.elm-lang.org/packages/elm/browser/latest/Browser
#+begin_src elm

main          : Program () Model Msg             -- 1st param for JS interop

-- Browser.sandbox - cannot communicate with the outside world
init          : model
view          : model -> Html msg
update        : msg -> model -> model

-- Browser.element - manages an HTML element managed by Elm
init          : flags -> (model, Cmd msg) -- !
view          : model -> Html msg
update        : msg -> model -> (model, Cmd msg) -- !
subscriptions : model -> Sub msg

-- Browser.document - body/script var app = Elm.Main.init()
-- type alias Document msg =
--   { title : String
--   , body  : List (Html msg)
--   }
init          : flags -> (model, Cmd msg)
view          : model -> Document msg
update        : msg -> model -> (model, Cmd msg)
subscriptions : model -> Sub msg

-- Browser.application - manages url changes, avoid new HTMl when url changes
-- type UrlRequest =
--   = Internal Url.Url
--   | External String
init          : flags -> Url -> Key -> (model, Cmd msg) -- Url = current url in browser
view          : model -> Document msg
update        : msg -> model -> (model, Cmd msg)
subscriptions : model -> Sub msg
onUrlRequest  : UrlRequest -> msg -- intercepts <a> clicks, msg goes to update
onUrlChange   : Url -> msg -- when the Url changes, msg goes to update

#+end_src

** module / import

#+begin_src elm
  module Page.Register exposing (Msg, init, subscription)

  -- on *module* exposing a type could only be either
  -- - Cred(..) -- all of it
  -- - Cred     -- nothing of it

  import Time                          -- qualified, ONLY makes the namespace available
  import Page.NotFound as NotFond      -- qualified, alias
  import Article.Slug  exposing (Slug) -- open import, get Slug in scope
  import Html          exposing (..)   -- open import, gets ALL on Html in scope
  import SeasonMod     exposing (Season(..)) -- open import, imports all type constructors in type Season
  import SeasonMod     exposing (Season)     -- qualified, imports Season
#+end_src

** stdlib / functions
https://package.elm-lang.org/packages/elm/core/latest/
|--------------+-------------------------------|
| [[https://package.elm-lang.org/packages/elm/core/latest/Array][Array]]        | indexedMap toIndexedList      |
| [[https://package.elm-lang.org/packages/elm/core/latest/Basics][Basics]]       | "things imported by default"  |
| [[https://package.elm-lang.org/packages/elm/core/latest/Bitwise][Bitwise]]      | complement shiftLeftBy        |
| [[https://package.elm-lang.org/packages/elm/core/latest/Char][Char]]         | toCode fromCode               |
| [[https://package.elm-lang.org/packages/elm/core/latest/Debug][Debug]]        | toString log todo             |
| [[https://package.elm-lang.org/packages/elm/core/latest/Dict][Dict]]         | merge union intersect diff    |
| [[https://package.elm-lang.org/packages/elm/core/latest/List][List]]         | intersperse partition unzip   |
| [[https://package.elm-lang.org/packages/elm/core/latest/Maybe][Maybe]]        | andThen                       |
| [[https://package.elm-lang.org/packages/elm/core/latest/Platform][Platform]]     | Program Task ProcessId Router |
| [[https://package.elm-lang.org/packages/elm/core/latest/Platform-Cmd][Platform.Cmd]] | none                          |
| [[https://package.elm-lang.org/packages/elm/core/latest/Platform-Sub][Platform.Sub]] | batch                         |
| [[https://package.elm-lang.org/packages/elm/core/latest/Process][Process]]      |                               |
| [[https://package.elm-lang.org/packages/elm/core/latest/Result][Result]]       | andThen mapError              |
| [[https://package.elm-lang.org/packages/elm/core/latest/Set][Set]]          | partition                     |
| [[https://package.elm-lang.org/packages/elm/core/latest/String][String]]       |                               |
| [[https://package.elm-lang.org/packages/elm/core/latest/Task][Task]]         |                               |
| [[https://package.elm-lang.org/packages/elm/core/latest/Tuple][Tuple]]        | mapFirst mapSecond mapBoth    |
|--------------+-------------------------------|
https://github.com/orgs/elm/repositories?q=mirror%3Afalse+fork%3Afalse+archived%3Afalse+language%3Aelm+sort%3Aname-asc
|------------------------+-----------------------------------|
| [[https://package.elm-lang.org/packages/elm/browser/latest/][browser]] [[https://github.com/elm/browser/blob/1.0.0/notes/keyboard.md][1]]              | Browser.Navigation.{load,pushUrl} |
| [[https://package.elm-lang.org/packages/elm/bytes/latest/][bytes]]                  |                                   |
| [[https://package.elm-lang.org/packages/elm/color/latest/][color]]                  |                                   |
| [[https://package.elm-lang.org/packages/elm/file/latest/][file]]                   |                                   |
| [[https://package.elm-lang.org/packages/elm/html/latest/][html]]                   |                                   |
| [[https://package.elm-lang.org/packages/elm/http/latest/][http]]                   |                                   |
| [[https://package.elm-lang.org/packages/elm/json/latest/][json]]                   |                                   |
| [[https://package.elm-lang.org/packages/elm/parser/latest/][parser]]                 |                                   |
| [[https://package.elm-lang.org/packages/elm/project-metadata-utils/latest/][project-metadata-utils]] |                                   |
| [[https://package.elm-lang.org/packages/elm/random/latest/][random]]                 |                                   |
| [[https://package.elm-lang.org/packages/elm/regex/latest/][regex]]                  |                                   |
| [[https://package.elm-lang.org/packages/elm/svg/latest/][svg]]                    |                                   |
| [[https://package.elm-lang.org/packages/elm/time/latest/][time]]                   | Time.Posix                        |
| [[https://package.elm-lang.org/packages/elm/virtual-dom/latest/][virtual-dom]]            |                                   |
| [[https://package.elm-lang.org/packages/elm/url/latest/][url]]                    |                                   |
|------------------------+-----------------------------------|

|------------+--------------------+----------------------------------------------------------------------|
|        <r> | <l>                |                                 <c>                                  |
|     module | function           |                                                                      |
|------------+--------------------+----------------------------------------------------------------------|
|       Http |                    |                                                                      |
|            | .get               |                   String -> Decoder a -> Request a                   |
|            | .getString         |                       String -> Request String                       |
|            | .send              |           (Result Error a -> msg) -> Request a -> Cmd msg            |
|            | .CompletedLoadFeed |                         Result Error String                          |
|            | .post              |               String -> Body -> Decoder a -> Request a               |
|            | .emptyBody         |                                 Body                                 |
|            | .stringBody        |                       String -> String -> Body                       |
|            | .request           | {method,header,url,body,expect,timeout,withCredentials} -> Request a |
|------------+--------------------+----------------------------------------------------------------------|
|     Random |                    |                                                                      |
|            | .generate          |          creates a generator, from the provided description          |
|            | .initialSeed       |                 creates a seed from a given integer                  |
|            | .step              |        produces newRandomValue+newSeed, from a generator+seed        |
|            | .constant          |                              generator                               |
|            | .uniform           |                        generator, from a list                        |
|            | .weighted          |                   generator, from a weighted list                    |
|            | .map               |             generator, take an fn maps inside the random             |
|            | .andThen           |                              generator                               |
|            | .int               |                              generator                               |
|            | .float             |                              generator                               |
|            | .list              |             generator helper, take an N and a generator              |
|            | .pair              |                 generator helper, takes 2 generatos                  |
|            | .lazy              |   generator, to create self-referencing generators, helps compiler   |
|------------+--------------------+----------------------------------------------------------------------|
|  WebSocket |                    |                                                                      |
|            | .listen            |                 String -> (String -> msg) -> Sub msg                 |
|            | .send              |                     String -> String -> Cmd msg                      |
|------------+--------------------+----------------------------------------------------------------------|
| Navigation |                    |                                                                      |
|            | .newUrl            |                          String -> Cmd msg                           |
|            | .program           |                                                                      |
|            | .programWithFlags  |                                                                      |
|------------+--------------------+----------------------------------------------------------------------|
** operators
|------+----------------------------------------+------------------------------------------------------------|
| op   | signature                              | describes...                                               |
|------+----------------------------------------+------------------------------------------------------------|
| (¦>) | a          -> (a -> b)   -> b          | the _flow of data_, main advantage over nested parentheses |
| (<¦) | (a -> b)   ->    a       -> b          | second argument INTO the first                             |
| (>>) | (b -> c)   -> (a -> b)   -> (a -> c)   | _function compositions_, indepedent of the data flow       |
| (<<) | (a -> b)   -> (b -> c)   -> (a -> c)   |                                                            |
| (++) | appendable -> appendable -> appendable |                                                            |
|------+----------------------------------------+------------------------------------------------------------|
** attributes/events (1st argument)

- https://package.elm-lang.org/packages/elm/html/latest/Html-Attributes
- https://package.elm-lang.org/packages/elm/html/latest/Html-Events
|-----------------------------+---------------------------------------------|
| Html.Events.on              | String -> Decoder msg -> Html.Attribute msg |
| Html.Events.onClick         | msg -> Attribute msg                        |
| Html.Events.onInput         | (String -> msg) -> Attribute msg            |
|-----------------------------+---------------------------------------------|
| Html.Attributes.placeholder | String -> Attribute msg                     |
| Html.Attributes.value       | String -> Attribute msg                     |
| Html.Attributes.class       | String -> Attribute msg                     |
|-----------------------------+---------------------------------------------|
| Browser.Events.onMouseMove  | Decoder msg -> Sub msg                      |
|-----------------------------+---------------------------------------------|

** types

- Elm special ~constraint type variables~, that have special constraints. Must begin with:
  * number
  * appendable (String, List)
  * comparable (Int,Float,String?...7)

*** Primitive
|--------+-------+------------+--------------------------------------------------------------------------------------------|
|    <r> |   <r> |            |                                                                                            |
|   type |    eg | fn reason  | fn                                                                                         |
|--------+-------+------------+--------------------------------------------------------------------------------------------|
| String | "foo" | MANIPULATE | revert repeat  replace  append     concat    split, join, words, lines, cons, uncons, (++) |
|        |       | SUBSTRING  | slice  left    right    dropLeft   dropRight                                               |
|        |       | CHECK      | length isEmpty contains startsWith indexes                                                 |
|        |       | CONVERT    | toInt  fromInt toFloat  fromFloat  toList    fromList, fromChar                            |
|        |       | HIGH-ORDER | map    filter  foldl    foldr      any       all                                           |
|--------+-------+------------+--------------------------------------------------------------------------------------------|
|   Char |   'i' | PREDICATE  | isUpper, isLower, isAlpha, isAlphaNum,                                                     |
|        |       |            | toUpper, toLower, toLocaleUpper, toLocaleLower                                             |
|        |       |            | toCode, fromCode                                                                           |
|--------+-------+------------+--------------------------------------------------------------------------------------------|
|    Int |       |            | toFloat                                                                                    |
|--------+-------+------------+--------------------------------------------------------------------------------------------|
|  Float |       |            | round, floor, ceiling, truncate                                                            |
|--------+-------+------------+--------------------------------------------------------------------------------------------|
|   Bool |       |            | &&, ¦¦, not                                                                                |
|--------+-------+------------+--------------------------------------------------------------------------------------------|
*** Compound

|------------------+-------------------+-------------+----------------------+----------------------|
|              <r> |               <r> |             |                      |                      |
|      instantiate |              type | access      | update               | destructuring        |
|------------------+-------------------+-------------+----------------------+----------------------|
|          [1,2,3] |          List Int |             |                      | x :: xs              |
|       (1, "foo") |   ( Int, String ) | Tuple.first |                      | ( foo, bar )         |
|   Array.fromList |         Array Int | Array.get   | Array.set            |                      |
|------------------+-------------------+-------------+----------------------+----------------------|
| { name = "foo" } | { name : String } | rec.name    | { rec ¦ name = "Z" } | { name }             |
|        { "foo" } |                   |             |                      | ({ name } as person) |
|------------------+-------------------+-------------+----------------------+----------------------|

#+begin_src elm
type Maybe a = Just a | Nothing
type Result a b = Ok a | Err b
-- even in the module where is defined, you CANNOT make one
type Never = OneMore Never
-- example type representing a Model, without field names, like in a record
type Model String Int (List Post)
#+end_src

- =Array=, immutable
  - defining : empty fromList repeat initialize
  - get/set  : get set push
  - props    : length
- =Tuples= max of 3 elements
- =Records=
  - have a N element ~constructor~, when defined as a type alias, the same name as the type
  - have a ".fieldname" function defined for each of the fields
  - can use ~extensible~ for function signature to receive any records with the specified field names
    #+begin_src elm
point2d = { x = 1, y = 2 }
point3d = { x = 3, y = 4, z = 5 }
-- .x point2d => 1
-- .x point3d => 3
length : { a | x : Float, y : Float } -> Float
length vector =
    sqrt (vector.x * vector.x + vector.y * vector.y)
    #+end_src


* elm.json

dependencies are downloaded globally at =$HOME=, NOT per project

|--------------------+-------------|
| source-directories | ["src"]     |
| type               | application |
| elm-version        | 0.19.0      |
| dependencies       |             |
| test-dependencies  |             |
|--------------------+-------------|

* executable
|---------+--------------------------+----------------------------------------------------------|
|     <r> |                          |                                                          |
|---------+--------------------------+----------------------------------------------------------|
|    init |                          |                                                          |
| install | elm/browser              |                                                          |
|    make | Main.elm                 | outputs a .html                                          |
|    make | Main.elm --output elm.js | compile, point it at entrypoint file optional --optimize |
|    repl |                          |                                                          |
|---------+--------------------------+----------------------------------------------------------|
* codebases

- web framework
  https://github.com/dillonkearns/elm-pages
  https://elm-pages.com/
- survey site (now closed) https://github.com/MartinSStewart/state-of-elm
- games https://github.com/rofrol/elm-games
- main site written on it https://github.com/elm/elm-lang.org/
- Example spa https://github.com/rtfeldman/elm-spa-example/
- todoapp https://github.com/evancz/elm-todomvc/blob/master/src/Main.elm
- https://elm-lang.org/examples
  https://github.com/dwyl/learn-elm/
- interview challenge https://github.com/scrive/elm-challenge
- fetch rss https://github.com/cmoog/nytrss/blob/master/Main.hs
- different personal tools of "some guy"
  https://github.com/amkhlv/usr/tree/master/share/Haskell

* snippets

#+begin_src elm
  -- sort by length
  List.sortBy String.length ["Hi","mum","hello"]
  -- sort by length and alphabetically
  List.sortBy (\str -> (String.length str, str)) ["Hi","mum","hello"]
#+end_src

Stops browser default action (eg: fold <details>)

#+begin_src elm
import Json.Decode as JD

alwaysPreventDefault : msg -> ( msg, Bool )
alwaysPreventDefault msg =
    ( msg, True )

onClickWithPreventDefault : msg -> Html.Attribute msg
onClickWithPreventDefault msg =
    preventDefaultOn "click" (JD.map alwaysPreventDefault (JD.succeed msg))
#+end_src

Similar to stop propagation

#+begin_src elm
onClickWithStopPropagation : msg -> Html.Attribute msg
onClickWithStopPropagation msg =
    stopPropagationOn "click" (JD.map (\m -> ( m, True )) (JD.succeed msg))
#+end_src
