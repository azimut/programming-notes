- https://lokathor.gitbooks.io/using-haskell/content/opengl/
- Course for webservices https://github.com/qfpl/applied-fp-course
- Course https://github.com/serokell/hse-haskell-course-src
- Tutorial https://devtut.github.io/haskell/
- https://serokell.io/blog/haskell-in-production-noredink
- GHC Manual https://downloads.haskell.org/ghc/latest/docs/users_guide/index.html
- Naming conventions https://kowainik.github.io/posts/naming-conventions
- https://evanrelf.com/haskell-libraries-i-love
- Styleguide https://github.com/tibbe/haskell-style-guide/blob/master/haskell-style.md
- Mailing List https://mail.haskell.org/mailman/listinfo/haskell-cafe
- Article: Monads https://blog.plover.com/prog/burritos.html
- Article: https://paulspontifications.blogspot.com/2013/01/when-haskell-is-faster-than-c.html
- https://www.schoolofhaskell.com/school/advanced-haskell/beautiful-concurrency/3-software-transactional-memory
- https://github.com/prathyvsh/category-theory-resources
- https://work.njae.me.uk/2021/12/21/advent-of-code-2021-day-19/
- http://sordina.github.io/blog/2021/01/03/1609638326-advent19b.html
- Usage Examples of Haskell https://homepages.inf.ed.ac.uk/wadler/realworld/
- https://hackage.haskell.org/package/rio
  https://www.fpcomplete.com/haskell/library/rio/
- Memory Usage https://stackoverflow.com/questions/459725/how-to-reduce-memory-usage-in-a-haskell-app
- FPGA Clash Talks https://unsafeperform.io/talks/
- Book: Retrocomputing with Clash: Haskell for FPGA Hardware Design
  https://unsafeperform.io/retroclash/
- https://github.com/reanimate/reanimate
- Haskell via Sokoban - Tutorial - https://haskell-via-sokoban.nomeata.de/
- Learn Haskell making a static blog generator - https://soupi.github.io/learn-haskell-blog-generator/
- https://crypto.stanford.edu/~blynn/haskell/
- https://leanpub.com/haskell-cookbook/read
- cabal v2-repl exe:CABALPKGNAME -- give a ghci shell with all deps loaded
- https://hackage.haskell.org/package/base-4.14.0.0/docs/Prelude.html#g:5
- http://www.cis.syr.edu/~sueo/cis252/emacs.html
- https://hoogle.haskell.org/
- euterpea example http://donyaquick.com/interesting-music-in-four-lines-of-code/
- quickstart euterpea https://github.com/madjestic/nu/blob/02eb3957f9ba5d0f0fbac7cd260f7142227a7008/Projects/blogs/turtlesturtlesturtles/posts/2018-11-29-a-quick-start-with-Euterpea.md
- Euterpea Interactive-Haskell with Literate-Haskell https://github.com/lfborjas/distractions/blob/a6b6bcd09270fa73233b05f3afb1800b977da9c3/haskell_school_of_music/README.md
- https://github.com/graninas/software-design-in-haskell
- https://kowainik.github.io/posts/haskell-mini-patterns
- https://github.com/kowainik/learn4haskell
- https://en.wikipedia.org/wiki/Dependent_type
- https://en.wikipedia.org/wiki/Generalized_algebraic_data_type
- https://github.com/omelkonian/AlgoRhythm (music)
- Project https://github.com/xmonad/xmonad
* Build
- -I0
  -Iw
  +RTS -I0 -RTS
  -rtsopts to ghc-options in .cabal
* Personalities
** Simon Peyton-Jones
- haskell comitee on design
** Philip Wadler
- haskell comitee on design
* Setup
  - https://github.com/haskell/haskell-ide-engine
  - https://github.com/soupi/minimal-haskell-emacs (setup)
  - https://github.com/ndmitchell/ghcid "flymake"
  - https://github.com/ndmitchell/hlint "flycheck"
  - https://github.com/chrisdone/hindent "gofmt"
* Libraries
- A fast, light-weight web server for WAI applications.
  https://hackage.haskell.org/package/warp
  https://hackage.haskell.org/package/wai
- REST - A family of combinators for defining webservices APIs and serving them
  https://hackage.haskell.org/package/servant
- https://hackage.haskell.org/package/turtle-1.5.21/docs/Turtle-Tutorial.html
- Conduit is a framework for dealing with streaming data, such as reading raw bytes from a file, parsing a CSV response body from an HTTP request, or performing an action on all files in a directory tree. 
  https://github.com/snoyberg/conduit
- It is defined as a monad transformer that can be stacked on arbitrary monads, and it is also parametric in the input stream type.
  https://hackage.haskell.org/package/parsec
- State of the Haskell ecosystem
  https://github.com/Gabriel439/post-rfc/blob/master/sotu.md
* Learn
** Other
- https://github.com/bitemyapp/fp-course
- https://github.com/hmemcpy/milewski-ctfp-pdf
- https://threadreaderapp.com/thread/1277615394560360449.html
- https://github.com/Kuratoro/haskell.zettel.page/blob/master/2012502.md
- Applied Haskell is a commercial training program focusing on teaching intermediate Haskell.
  https://www.fpcomplete.com/haskell/syllabus/
- http://learnyouahaskell.com/chapters
- https://www.reddit.com/r/haskell/comments/d5og5n/which_book/
- https://github.com/i-am-tom/haskell-exercises (extensions)
- https://github.com/caiorss/Functional-Programming
- What I Wish I Knew When Learning Haskell
  http://dev.stephendiehl.com/hask/
- https://kowainik.github.io/posts/haskell-mini-patterns
- https://github.com/soupi/haskell-study-plan
- https://github.com/alpacaaa/zero-bullshit-haskell
- https://github.com/tssm/up-to-date-real-world-haskell
- https://github.com/graninas/software-design-in-haskell
- https://github.com/bitemyapp/learnhaskell
** Monad Tutorials
- https://www.lambdacat.com/the-midnight-monad-a-journey-to-enlightenment/
- https://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html
- https://en.wikibooks.org/wiki/Haskell/Understanding_monads
- http://blog.sigfpe.com/2006/08/you-could-have-invented-monads-and.html
- https://web.archive.org/web/20081206204420/http://www.loria.fr/~kow/monads/index.html
- https://blog.plover.com/prog/burritos.html
  https://byorgey.wordpress.com/2009/01/12/abstraction-intuition-and-the-monad-tutorial-fallacy/
  https://chrisdone.com/posts/monads-are-burritos/
