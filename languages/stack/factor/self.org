- home https://factorcode.org/
- wiki https://en.wikipedia.org/wiki/Factor_(programming_language)
  - Author: Slave Pestov
  - Stack-Oriented Programming Language
  - 2003-
  - Created as scripting language for a video game (aka JFactor)
  - Dynamically typed
  - Object System
  - FFI

- wiki http://progopedia.com/language/factor/
- tutorial https://andreaferretti.github.io/factor-tutorial/

* language

- Procedures are called =words=
  - 1-3 LOC generally
  - Fixed number of arguments
- Stack is used to organize calls to words, NOT as a data structure.
- No package manager.
  All libraries of the language are part of the Factor monorepo.
  Along with docs.

* Standalone Executables

https://concatenative.org/wiki/view/Factor/Deployment

- Dynamically compiled, not stripped, with direct links to:
  * libc.so.6
  * libdl.so.2
  * libgcc_s.so.1
  * libm.so.6
  * libpthread.so.0
  * librt.so.1
  * libstdc++.so.6
- does NOT support "stripping" with "strip"
- single core compiler (?
- ~8min in compile "tetris" example
  ~3Mb

* libraries/vocabularies

- all
  https://docs.factorcode.org/content/article-vocab-index.html
  https://docs.factorcode.org/content/article-handbook-library-reference.html
- ui examples https://docs.factorcode.org/content/article-ui.html
- opengl examples https://github.com/George66/Factor/tree/main/OpenGL3.2%2B%20examples
- web framework
  https://concatenative.org/wiki/view/Factor/Furnace
  https://docs.factorcode.org/content/vocab-furnace.html

* codebases

- examples https://concatenative.org/wiki/view/Factor/Examples
- utils https://github.com/mrjbq7/re-factor
- https://bluishcoder.co.nz/2020/04/18/fun-factor-libraries.html
- supercollider https://github.com/defaultxr/factor-supercollider/
