* functions
https://www.postgresql.org/docs/9.6/functions-datetime.html
|----------------------------------+-----------------------------------------------------------------|
| format()                         | like printf                                                     |
| extract()                        | gets a number                                                   |
| to_char()                        | gets a string                                                   |
| coalesce()                       | returns teh first argument that is NOT null                     |
| cast(..as..)                     | specifies how to perform a conversion                           |
| generate_series(start,stop,step) | a set returning function, returns a set of timestamps           |
| string_agg()                     |                                                                 |
| generate_series(from, to)        |                                                                 |
| count()                          |                                                                 |
| avg()                            |                                                                 |
| rollup(NRCOL)                    | group by rollup()                                               |
| sum(COL)                         |                                                                 |
| percentile_dist(NUM)             | percentile number 0-1, returns int                              |
| percentile_cont(NUM)             | percentile number 0-1, returns float                            |
| rank(NUM)                        | suppose there was a NUM in it, which rank/index will it be?     |
|----------------------------------+-----------------------------------------------------------------|
| to_tsvector(LANG?, STR)          | optional LANG, will ignore stopwords                            |
| to_tsquery(LANG?, STR)           | optional LANG, supports boolean operators, startwith (:*)       |
| ts_rank(TSV,TSQ)                 | returns a number representing the relevancey of the document    |
| setweight()                      | sets a weight to a tsvector, A B C or D                         |
| tsvector_update_trigger()        | to easily denormalize data from the same table                  |
| tsvector_update_trigger_column() | to easily denormalize data from the same table                  |
|----------------------------------+-----------------------------------------------------------------|
| similarity(S1,S2)                | E: pg_trgm, returns a 0-1 number of how similars the string are |
| unaccent(S)                      | E: unaccent                                                     |
|----------------------------------+-----------------------------------------------------------------|
* extensions
|------------+----------------------------------------------|
| pg_trgm    | support for trigram, aka misspelling support |
| unaccent   | removes accents from string                  |
| btree_gist | provides operators                           |
| citext     | case insensitive text                        |
|------------+----------------------------------------------|
* list enabled extensions/plugins (\dx)
on supabase
#+begin_src
 ~> \dx
                                            List of installed extensions
        Name        │ Version │   Schema   │                              Description
════════════════════╪═════════╪════════════╪════════════════════════════════════════════════════════════════════════
 pg_graphql         │ 1.2.3   │ graphql    │ pg_graphql: GraphQL support
 pg_stat_statements │ 1.10    │ extensions │ track planning and execution statistics of all SQL statements executed
 pgcrypto           │ 1.3     │ extensions │ cryptographic functions
 pgjwt              │ 0.2.0   │ extensions │ JSON Web Token API for Postgresql
 pgsodium           │ 3.1.7   │ pgsodium   │ Pgsodium is a modern cryptography library for Postgres.
 plpgsql            │ 1.0     │ pg_catalog │ PL/pgSQL procedural language
 supabase_vault     │ 0.2.8   │ vault      │ Supabase Vault Extension
 uuid-ossp          │ 1.1     │ extensions │ generate universally unique identifiers (UUIDs)
(8 rows)
#+end_src
* list sequences
https://soft-builder.com/how-to-list-sequences-in-postgresql-database/
#+begin_src sql
# select sequence_schema, sequence_name from information_schema.sequences order by sequence_name;
 sequence_schema │   sequence_name
═════════════════╪════════════════════
 public          │ dns_data_id_seq
 public          │ dns_error_id_seq
 public          │ domains_id_seq
 public          │ nameservers_id_seq
#+end_src
* add COLUMN into table
https://www.commandprompt.com/education/how-to-add-columns-to-a-table-in-postgresql/
#+begin_src sql
  ALTER TABLE nameservers ADD COLUMN is_alive boolean DEFAULT true;
  ALTER TABLE nameservers DROP COLUMN is_alive;

  ALTER TABLE nameservers ADD COLUMN timeouts integer DEFAULT 0;
  ALTER TABLE nameservers ADD COLUMN enabled boolean DEFAULT true;
#+end_src
* non default port, Selinux
- Listen on non default port (5433)
#+begin_src
[root@localhost audit]# grep postmaster audit.log
type=AVC msg=audit(1611139642.653:23799): avc:  denied  { name_bind } for  pid=1061793 comm="postmaster" src=5433 scontext=system_u:system_r:postgresql_t:s0 tcontext=system_u:object_r:unreserved_port_t:s0 tclass=tcp_socket permissive=0
type=AVC msg=audit(1611139642.653:23800): avc:  denied  { name_bind } for  pid=1061793 comm="postmaster" src=5433 scontext=system_u:system_r:postgresql_t:s0 tcontext=system_u:object_r:unreserved_port_t:s0 tclass=tcp_socket permissive=0
#+end_src
audit2allow -M mypol -i /var/log/audit/audit.log
semodule -i mypol.pp

* Separate Instance, Fedora
  Default Port: 5432

  sudo postgresql-new-systemd-unit
  --unit=postgresql@chatlogs
  --datadir=/var/lib/pgsql/chatlogs

  sudo postgresql-setup
  --port 5432
  --unit=postgresql@recon
  --initdb
* new user
  https://ubiq.co/database-blog/create-user-postgresql/
#+begin_src sql
CREATE USER user_name WITH ENCRYPTED PASSWORD 'mypassword';
GRANT ALL PRIVILEGES ON DATABASE sample_db TO user_name;
GRANT INSERT,SELECT ON some_table TO user_name;
#+end_src

