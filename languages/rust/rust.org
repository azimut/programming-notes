- Article: https://rauljordan.com/rust-concepts-i-wish-i-learned-earlier/
- tutorial https://google.github.io/comprehensive-rust/
- https://github.com/trickster0/OffensiveRust
- https://fasterthanli.me/articles/the-curse-of-strong-typing
- https://hirrolot.github.io/posts/rust-is-hard-or-the-misery-of-mainstream-programming.html
- https://github.com/trickster0/OffensiveRust
- RUST WASM https://www.reddit.com/r/rust/comments/tm10wi/media_i_made_a_website_to_demonstrate_performance/
- https://matklad.github.io/2020/09/20/why-not-rust.html
- https://fasterthanli.me/articles/some-mistakes-rust-doesnt-catch
- vulkan https://github.com/sjb3d/caldera
- libpthread.so needes for print!() https://github.com/rust-lang/rust/issues/43633
- https://www.forrestthewoods.com/blog/learning-rust-via-advent-of-code/
- https://www.forrestthewoods.com/blog/solving-advent-of-code-in-under-a-second/
- https://lucumr.pocoo.org/2021/11/14/abusing-serde/
- https://github.com/not-fl3/macroquad
- https://github.com/martinszy/rustelbrot
- https://docs.rs/nannou/latest/nannou/
- https://github.com/glium/glium
- https://github.com/not-fl3/macroquad
- Ultimate Rust 2: Intermediate Concepts
  https://github.com/CleanCut/ultimate_rust2
- PNGme: An Intermediate Rust Project
  https://picklenerd.github.io/pngme_book/
- open source training *courses* about distributed database and distributed systemes
  https://github.com/pingcap/talent-plan
- "RustBelt: Logical Foundations for the Future of Safe Systems Programming".
  https://plv.mpi-sws.org/rustbelt/
- Developers Reveal Why Rust Programming Language Is Losing Popularity
  https://fossbytes.com/developers-reveal-why-rust-programming-language-is-losing-popularity/
- An interpreter for Rust's mid-level intermediate representation
  https://github.com/rust-lang/miri
- https://users.rust-lang.org/t/rust-cves-should-i-worry/59904/7
- https://blog.akquinet.de/2021/01/03/haskell-is-faster-than-rust-wait-a-sec/
- https://www.fpcomplete.com/blog/philosophies-rust-haskell/
- http://technosophos.com/2019/08/07/writing-a-kubernetes-controller-in-rust.html
- https://github.com/unknownue/vulkan-tutorial-rust
- https://hackernoon.com/programming-in-rust-the-good-the-bad-the-ugly-d06f8d8b7738
- Type on destructuring = instead of :
- https://github.com/bevyengine/bevy
- tut dns server https://github.com/EmilHernvall/dnsguide
- https://research.mozilla.org/rust/

* Language
** Types
*** Primitive
|-------+-----+---|
| u8    | 1u8 |   |
| i32   |  10 |   |
| i64   |   ? |   |
| f64   |  5. |   |
| isize |  10 |   |
| usize |  10 |   |
| char  | 'a' |   |
|-------+-----+---|
*** Compound
|---------+----------------+-----------+--------------+-------------------|
|         | create         | access    | match        | insert            |
|---------+----------------+-----------+--------------+-------------------|
| Tuple   |                | .0        | (a,_b)       |                   |
| struct  |                | .FIELD    |              |                   |
| enum    |                |           | ENUM::Val(a) |                   |
| HashMap | HashMap::new() | .get(key) | (key,val)    | .insert(key, val) |
| Vector  | vec![]         |           |              |                   |
| Array   | []             |           |              |                   |
|---------+----------------+-----------+--------------+-------------------|
** Standard Library

https://doc.rust-lang.org/std/#modules

#+begin_src rust
  enum Option<T> {
    Some(T),
    None,
  }
#+end_src

#+begin_src rust
  enum Result<T,E> {
    Ok(T),
    Err(E),
  }
#+end_src

* Codebases
- https://github.com/pop-os/system76-power
- protohackers
  - serde+async+tokio https://github.com/nkitsaini/protohackers_impl
  - serde https://github.com/mvolfik/protohackers-challenge
  - serde+async+tokio+futures https://github.com/maxmarcon/protohackers/
  - serde+tokio https://github.com/dwalker109/protohackers
  - tokio https://github.com/camas/protohackers
  - tokio+futures https://gitlab.com/adirelle/protohackers
  - tokio+futures https://git.sr.ht/~sgeisenh/protohackers/tree
  - tokio https://github.com/tumdum/protohackers
  - tokio https://github.com/ajurna/protohackers
* Learn
- https://github.com/sger/RustBooks
- https://github.com/mre/idiomatic-rust
- https://rams3s.github.io/rust-ebookshelf/
- https://github.com/ctjhoa/rust-learning
- examples https://github.com/rust-lang/rust-by-example
           https://doc.rust-lang.org/stable/rust-by-example/
- examples https://github.com/rust-lang-nursery/rust-cookbook
** Medium
- https://doc.rust-lang.org/nightly/nomicon/
- https://rust-unofficial.github.io/too-many-lists/
- https://os.phil-opp.com/
- https://github.com/dtolnay/proc-macro-workshop
** Algorithms
- Common data structures and algorithms in Rust
  https://github.com/EbTech/rust-algorithms
- Small exercises to get you used to reading and writing Rust code!
  https://github.com/rust-lang/rustlings
- Implementing Rosetta Code problems in Rust.
  https://github.com/rust-rosetta/rust-rosetta
