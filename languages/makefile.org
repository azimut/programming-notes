- 10.3 Variables Used by Implicit Rules
  https://www.gnu.org/software/make/manual/html_node/Implicit-Variables.html
* Tutorial: makefile tutorial
  http://makefiletutorial.com/
- can be more than 1 *target* separated by space (usually 1)
- the *DEFAULT* target is always the first target
- use backslash (\) for too long *commands*
- it knows if a target is out to date (I guess it knows if the file was modified)
- ~.PHONY~ target is to let make know that is not a file (like for clean)
- variables can ONLY be strings
- the implicit command if you not put a command is
    blah: "cc blah.o -o blah"
    blah.o: cc -c blah.c -o blah.o
  .o is implicit if you define blah: alone
  it accepts CFLAGS
- Can use wildcards on the dependencies
  blah: *.c
- Other wildcards, like in vars use $(wildcard *.c)
- vpath!???!?!
- an ~all~ target is just some custom phony one, ommiting the clean part
- multiple targets
  - $@ can be used to ID the current target
  - % is the target wildcard
- commands, prefixed with @ will not be printed
- each *command* line runs on a new shell, use (;) and/or (\)
- ~.DELETE_ON_ERROR:~ will delete the target if a command fails (no default)
- fails if a command returns 1
|----+-------------------------------|
| -k | keep going on errors          |
| -n | dry run                       |
| -s | silent command print          |
| -i | ignore errors                 |
| -  | add to suppress command error |
|----+-------------------------------|
** 5.2 Recipe Echoing
https://www.gnu.org/software/make/manual/html_node/Echoing.html
- Adding an @ to a command, like @echo, suppress the print of the command (just the command, not the output)
** 8.8 The Shell function
#+begin_src makefile
all:
    @echo $(shell ls -la) # replaces new lines with spaces
#+end_src
** 9 Arguments to make
- Can be multiple *targets*
- --dry-run
  --touch
  --old-file
** 10 Implicit Rules
- .c   $(CC) -c $(CPPFLAGS) $(CFLAGS)
- .cpp $(CXX) -c $(CPPFLAGS) $(CXXFLAGS)
- .o   $(CC) $(LDFLAGS) n.o $(LOADLIBES) $(DLIBS)
** 10.5 Automatic variables
- $@ - current target name
- $? - prerequisits
- $^ - ? prerequisits
