- brief history https://www.reddit.com/r/FPGA/comments/uy4ce6/comment/ia37w7y/
- https://mike42.me/blog/2021-10-programming-plds-with-open-source-software
- https://en.wikipedia.org/wiki/Programmable_logic_device
  - aka PLD
  - Categories by complexity
    1) SPLDs https://en.wikipedia.org/wiki/Simple_programmable_logic_device
       - PLA(70) -> PAL(78) -> GAL(85)
    2) CPLDs(88?)
    3) FPGA(85?)

- tool: programmable logic with an eeprom https://github.com/DusteDdk/eepromlogic

* PAL  (78) - Programmable Array Logic

https://en.wikipedia.org/wiki/Programmable_Array_Logic

- by "Monolithic Memories" (MMI)

[[https://upload.wikimedia.org/wikipedia/commons/f/f0/MMI_PAL_16R6.jpg]]

- What?
  - A small PROM core
  - Output logic, used to implement desired logic functions
- Variants: OTP, UV erasable, flash erasable
- Smaller, cheaper, simpler, faster than FPLA
- Programming languages
  - PALASM (aka PAL assembler)
    - by John Birkner
    - written in FORTRAN IV
    - free
    - compilation steps
      1) write the boolean equations in a .txt
      2) convert it to a "fuse map" file
    - "fuse map" can be synthesized from HDL like Verilog
  - CUPL
  - ABEL

* GAL  (85) - Generic Array Logic

https://en.wikipedia.org/wiki/Generic_Array_Logic

- By "Lattice Semiconductors"

- Book: Practical Design Using Programmable Logic, by Pellerin David
- Could take the function of different type of PAL's
- Erasable & Reprogrammable (electrically)
  - x100 times
  - with a commercial EEPROM programmer
- Have a "security fuse", that disables reads (not writes)
  - is [[https://www.edaboard.com/threads/protected-pal-gal-reading.220871/][impossible to remove through software]]
- Can replace any 74xx chip (3 or more at the time)
  - exceptions: open collector, open drain, schmitt trigger, non D-type flipflop or with clock, pre-set or clear

** ics

#+CAPTION: GAL16V8
[[https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Amiga_1000_-_memory_expansion_module_-_National_Semiconductor_GAL16V8-25LNC-7731.jpg/800px-Amiga_1000_-_memory_expansion_module_-_National_Semiconductor_GAL16V8-25LNC-7731.jpg]]]]

- https://en.wikipedia.org/wiki/GAL22V10
- IC:
  - PALCE16V8H
  - GAL16V8, GAL20V8 (currently available?)
  - ATF22V10/V8 (DIP pin compatible)

** article

https://github.com/peterzieba/5Vpld
https://hackaday.com/2014/06/24/programmable-logic-i-plapal/
https://hackaday.com/2014/06/25/programmable-logic-ii-cpl/

** videos

- [ ] 25 [[https://www.youtube.com/watch?v=kzqxsFFQQNo][How to use ATF22V10/GAL22V10 Programmable Logic Devices (PLDs)]]
- [ ] GAL Hand dissasembly [[https://www.youtube.com/watch?v=h_d4npbKpdY][1]] [[https://www.youtube.com/watch?v=r2sXYgxVwVg][2]]
  - from binary dump to JEDEC using IC's Logic Diagram
- [X] 18 Me and My GAL [[https://www.youtube.com/watch?v=Q0LePBuaF8s][Part I]] [[https://www.youtube.com/watch?v=pMGAo6kArtU&t=60s][Part II]]
  - GAL16V8D-15LP / wincupl / jed2eqn (to verify wincupl output)
  - used for address decoding (?
- [X] 23 [[https://www.youtube.com/watch?v=J3LxLnfzYy4][Introduction to Programmable Logic Devices: SPLDs, PAL, GAL and FPGA]]
  - recap ends at 11:10
  - PAL starts at 38:00
- [ ] [[https://www.youtube.com/watch?v=8vezAmY8_ms][Programming GAL and NVRam chips]]
- [ ] [[https://www.youtube.com/watch?v=iyaqr0eAXp0][Digital Electronics: Programming GAL device to implement shift register operation.]]
- [ ] [[https://www.youtube.com/watch?v=TJbI-NMJaUY][FPGA #1 - An Overview of Programmable Logic Devices]]
- [ ] [[https://www.youtube.com/watch?v=g1hvaS_0WGA][Homebrew Computer Part 5: Programming a GAL 22V10]]
- [ ] [[https://www.youtube.com/watch?v=fCsP7ujMJV8][Make Your Own Microchips!]]
- [ ] [[https://www.youtube.com/watch?v=79lCXMIhkUs][GAL Devices - Bioengineering U de A]]
- IMSAI
  - [[https://www.youtube.com/watch?v=qmgvJHY6ky4][#93 TTL CPU GAL22V10]]
  - [[https://www.youtube.com/watch?v=8pXnCgQqb2I][#248 GAL 16V8 16V8D 16V8Z problems]]
  - [[https://www.youtube.com/watch?v=fo_WlA-kVRc][#756 Basics: PAL GAL Programmable Logic]]

- [[https://www.youtube.com/watch?v=G856wm332PQ][Chip Tips #3: Generic Array Logic]]
  - Needed for a "big" state machine.
  - PAL was an array of AND and OR gates.
    Followed by an array of invertors.
    Which could get most combinatory logic needed.
  - Uses GAL22V10

** compilation

-    JED = JEDEC
-    EQN = Boolean Equations
-   CUPL = Programming Language made by Atmel https://ece-classes.usc.edu/ee459/library/documents/CUPL_Reference.pdf
- PALASM = Programming Language

- source -> .jed -> PROGRAMMER -> GAL

** tools

- https://hackaday.com/tag/galasm/
- OPALjr - jed2eqn - eqn2jed
  - runs on DOSBOX
- asm? https://github.com/daveho/GALasm
- asm? https://github.com/simon-frankau/galette
- https://github.com/ChrisEAlfred/galparse
- hardware programmer
  - new https://github.com/ole00/afterburner
  - old https://github.com/ole00/afterburner/tree/version_4_legacy
- programmer https://www.microchip.com/en-us/development-tool/wincupl
- programmer http://www.armory.com/~rstevew/Public/Pgmrs/GAL/schema.gif
- programmer http://www.armory.com/~rstevew/Public/Pgmrs/GAL/_ClikMe1st.htm
- programmer http://elm-chan.org/works/pgal/report_e.html http://elm-chan.org/works/pgal/pgal_e.png

* CPLD (88) - Complex Programmable Logic Device
- https://en.wikipedia.org/wiki/Complex_programmable_logic_device
- ic: Microchip ATF15xx
- best? propagation delay
- tool: reversing https://github.com/bcrist/re4k
