- /proc/PID/maps: has the section memory address ranges
- inferior: the program being debugged

* gdbserver

- https://en.wikipedia.org/wiki/Gdbserver
- runs on the "target"
- while the source and copy of the binary is on the "host"

#+CAPTION: on target
#+begin_src sh
  $ gdbserver 5.5.5.5:1234 --attach `pidof PROGNAME`
#+end_src

#+CAPTION: on host
#+begin_src sh
  $ gdb-multiarch /foo/PROGNAME
  gdb> target remote 5.5.5.5:1234
  gdb> info registers
  gdb> bt
  gdb> info proc mappings
#+end_src

* Commands
|-----------------+---------+---------------------------------|
|       <c>       |   <c>   |                                 |
|    set args     |  1 2 3  |                                 |
| run < input.txt |         |                                 |
|     (n)ext      |   [N]   | step out, next source code line |
|     (n)exti     |   [N]   | step out, next asm instruction  |
|     (s)tep      |         | step into                       |
|     (p)rint     |         |                                 |
| info registers  |         |                                 |
|       x/i       |   $pc   |                                 |
|      file       | EXEPATH | opens EXE as current program    |
|-----------------+---------+---------------------------------|
* Emacs

- gdb
- gdb-many-windows
- gud-break (C-x C-a C-b)

- https://www.gnu.org/software/emacs/manual/html_node/emacs/Debuggers.html
- https://www.gnu.org/software/emacs/manual/html_node/emacs/Commands-of-GUD.html
- https://www.gnu.org/software/emacs/manual/html_node/emacs/GDB-Graphical-Interface.html
  - https://www.gnu.org/software/emacs/manual/html_node/emacs/GDB-User-Interface-Layout.html
    - "When you finish debugging, kill the GUD interaction buffer with C-x k, which will also kill all the buffers associated with the session."

- https://dschrempf.github.io/emacs/2015-06-24-debugging-with-emacs-and-gdb/
- https://onestepcode.com/debugging-c-gdb-emacs/
