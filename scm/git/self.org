- source (C) https://git.kernel.org/pub/scm/git/git.git/tree/
- documentation https://github.com/git/git/tree/master/Documentation
- wiki https://en.wikipedia.org/wiki/Git
  - Author: Linux Torvalds
  - 2005-
  - creation prompted by the revocation of the free license of *BitKeeper*
  - distributed version control system
  - tcp/9418

- change author/email on a repo
  - (DOES NO WORK) https://stackoverflow.com/questions/2919878/git-rewrite-previous-commit-usernames-and-emails
  - works https://stackoverflow.com/questions/750172/how-do-i-change-the-author-and-committer-name-email-for-multiple-commits
    $ git rebase -r --root --exec "git commit --amend --no-edit --reset-author"
    $ git push --force --all


* vc

- ~vc-annotate~ shows the blame besides the line
- ~vc-revision-other-window~ C-u C-x v, to view how the file looks on another branch
  ~vc-diff~                  C-x v =, to diff the file with master

- C-x v v - commit
- C-x v a - log commit history of region
- C-x p v - status

* magit

- when in log
  - SPC opens a pane with the commit
  - n,p cycles through commit history updating pane

t = transient
a = action
|---------+-----+--------------------------------------------------------------------------|
|   <c>   |     |                                                                          |
|    t    | a   | description                                                              |
|---------+-----+--------------------------------------------------------------------------|
|   1-4   |     | detail level, less to more                                               |
| M-[1-4] |     | detail level, less to mode, global                                       |
|   -+    |     | de/increase context per hunk                                             |
|   sS    |     | stage   / stage   all                                                    |
|   uU    |     | unstage / unstage all                                                    |
|   gG    |     | refresh / refresh all                                                    |
| C-x C-j |     | magit-dired-jump                                                         |
|    w    |     | reword commit at point                                                   |
|    *    | ? + | in any (*) transient shows help for action (+)                           |
|    ?    | ?   |                                                                          |
|    i    |     | over a untracked file, dialog to .gitignore that type of file            |
|    f    | p   | fetch remote (without affecting local branch)                            |
|    F    | p   | pull remote                                                              |
|         | r p | pull remote with rebase (useful when we have local commit)               |
|    b    | b   | checkout existing branch                                                 |
|         | s   | ~spinoff branch~ (take local commits an put them in a new branch)        |
|    c    | w   | write up (amend without changing what was commited)                      |
|         | f   | fixup                                                                    |
|         | F   | ~instant fixup~, opens commit history to pick a place to put our changes |
|    z    | z   | stash both (staged and unstaged)                                         |
|         | p   | ~apply+pop~ stash at point                                               |
|         | a   | apply     stash at point                                                 |
|---------+-----+--------------------------------------------------------------------------|
* debug=1 variables
|----------------------------+---------------------------------------------------------|
| GIT_TRACE_PACKET           | shows =packet line= info (with pktline length stripped) |
| GIT_TRACE                  | shows general general debug                             |
| GIT_CURL_VERBOSE           | shows curl debug info when using http://                |
| GIT_DEBUG_SEND_PACK        | debug output *upload-pack*                              |
| GIT_TRANSPORT_HELPER_DEBUG | debug output, for remote helpers                        |
|----------------------------+---------------------------------------------------------|
* $ git daemon - A really simple server for Git repositories
|---------------+---------------------------------|
| --reuseaddr   |                                 |
| --verbose     |                                 |
| --export-all  | enables cloning from all        |
| --base-path=. | maps git:// subpaths to subdirs |
|---------------+---------------------------------|
* $ git ls-remote - List ~references~ in a remote repository
|---------+-----------------------|
| --tags  | HASH refs/tags/v1.3.9 |
| --heads | HASH refs/heads/1.3   |
|---------+-----------------------|
* $ git clone

[[https://stefan.saasen.me/articles/git-clone-in-haskell-from-the-bottom-up/images/git-clone-overview@2x.png]]

#+begin_src

Client  ----- proto-capabilities.txt ------> Server


                capabilities resp
              get current repo state
Client <------ ref advertisement-----------| Server (discovery)
                 ref discovery                              \
                                                         negotiation
Client <--- Protocol ----- request refs ----> Server        /
          git/ssh/http    set of changes               (transfer)

3b10... HEAD\0multi_ack thin-pack side-band side-band-64k ofs-delta shallow no-progress include-tag multi_ack_detailed agent=git/1.8.1

Client <--- pack file (format) ---------| Server
              objects
#+end_src

- index format: track changes to files in working directory (?
- object store
  - stores: commits, trees, tags, file contents
  - in: blobs
- supported protocols
  - local
  - ssh
  - git
  - http

** discovery request ABFN (SP=space, NUL=\0)
#+begin_src
   git-proto-request = request-command SP pathname NUL [ host-parameter NUL ]
   request-command   = "git-upload-pack" / "git-receive-pack" / "git-upload-archive"   ; case sensitive
   pathname          = *( %x01-ff ) ; exclude NUL
   host-parameter    = "host=" hostname [ ":" port ]
#+end_src
example: 0032git-upload-pack /git-bottom-up\0host=localhost\0

* $ git fetch
#+begin_src
  Client   -----------> Server
fetch-pack            upload-pack

 wants+refs ---------> Server (figures out what is needed to send)
#+end_src

* $ git push
#+begin_src
  Client   ----------> Server
send-pack            receive-pack
#+end_src

* folder into new repo     (filter-repo)

https://docs.github.com/en/get-started/using-git/splitting-a-subfolder-out-into-a-new-repository

#+begin_src sh
  $ git clone URL
  $ cd URLDIR
  $ git filter-repo --path path/to/folder/ # OR
  $ git filter-repo --subdirectory-filter path/to/folder # to be the new rootdir
#+end_src

* remove file from history (filter-repo)

https://stackoverflow.com/questions/43762338/how-to-remove-file-from-git-history

#+begin_src sh
$ git filter-repo --invert-paths --path dir/subdir/file
#+end_src

* .git/

index

HEAD

refs/
refs/heads
refs/heads/master # contains the hash of the previous commit
refs/tags

objects/b0/<HASH>

logs/
logs/HEAD
logs/refs/heads/master

info/
info/exclude

* command (145)

- restore
** 82 Porcelain commands
|----+---------------+-------------------------|
| 44 | main          | add, commit, push, pull |
| 11 | manipulators  | config, reflog, replace |
| 17 | interrogators | blame, fsck, rerere     |
| 10 | interactors   | send-email, p4, svn     |
|----+---------------+-------------------------|
** 64 Plumbing commands
|----+---------------+--------------------------------|
| 19 | manipulators  | apply, commit-tree, update-ref |
| 21 | interrogators | cat-file, for-each-ref         |
|  5 | syncing       | fetch-pack, send-pack          |
| 18 | internal      | check-attr, sh-i18n            |
|----+---------------+--------------------------------|
** Descriptions

|--------------+------------------------------+----------------------------------------------------------|
| add          |                              |                                                          |
|              | -p                           | interactively select ~hunks~ of patches to add           |
|--------------+------------------------------+----------------------------------------------------------|
| branch       |                              |                                                          |
|              | -vv                          |                                                          |
|              | --set-upstream-to=?/?        |                                                          |
|--------------+------------------------------+----------------------------------------------------------|
| cat-file     | HASH_OBJECT                  | content+size+information of OBJECT                       |
|              | -p                           | content only                                             |
|              | -t                           | type only                                                |
|              | -s                           | size only                                                |
|--------------+------------------------------+----------------------------------------------------------|
| checkout     | BRANCH [-- FNAME]            | switch to BRANCH                                         |
|              | -b                           | creates the BRANCH                                       |
|--------------+------------------------------+----------------------------------------------------------|
| clone        | URL                          |                                                          |
|              | --shallow                    | only gets the current snapshot, not the full thing       |
|--------------+------------------------------+----------------------------------------------------------|
| fetch        |                              |                                                          |
|--------------+------------------------------+----------------------------------------------------------|
| help         | MODULE_NAME                  | man page of MODULE_NAME                                  |
|--------------+------------------------------+----------------------------------------------------------|
| init         | DIRECTORY                    |                                                          |
|--------------+------------------------------+----------------------------------------------------------|
| lfs          | install                      | https://git-lfs.github.com/                              |
|              | track ".EXT"                 |                                                          |
|--------------+------------------------------+----------------------------------------------------------|
| log          |                              |                                                          |
|              | --all                        | show all refs+HEAD                                       |
|              | --graph                      | draw                                                     |
|              | --decorate                   | prints refnames                                          |
|              | --oneline                    | aka --pretty=oneline --abbrev-commit                     |
|              | --format=raw                 |                                                          |
|--------------+------------------------------+----------------------------------------------------------|
| ls-files     |                              | list all files                                           |
|--------------+------------------------------+----------------------------------------------------------|
| merge        | BRANCH                       |                                                          |
|              | --abort                      |                                                          |
|              | --continue                   |                                                          |
|--------------+------------------------------+----------------------------------------------------------|
| pull         |                              | fetch + merge                                            |
|--------------+------------------------------+----------------------------------------------------------|
| push         | <REMOTE> <LB:RB>             | LB = "local branch" RB = "remote branch"                 |
|--------------+------------------------------+----------------------------------------------------------|
| reflog       |                              | shows the changes YOU made that caused commits to change |
| reset        |                              |                                                          |
|              | --hard HEAD@{1}              | single step undo                                         |
|--------------+------------------------------+----------------------------------------------------------|
| status       |                              |                                                          |
|--------------+------------------------------+----------------------------------------------------------|
| update-index |                              |                                                          |
|              | --add                        |                                                          |
|              | --cache-info MODE HASH FNAME |                                                          |
|--------------+------------------------------+----------------------------------------------------------|
** 1 git stats
Output format: Nr. of lines, hash and message
100 HASH commit message here

| git rev-list HEAD           | get a list of revisions (as hashes)                     |
|                             | HEAD is a ref                                           |
|                             | last commit last                                        |
| git rev-list --reverse HEAD |                                                         |
| git log -1 $revision        | same of just git log                                    |
| git ls-tree $revision       | all the files on revision                               |
| git ls-tree -r $revision    | -r does recursion of commits to actually show the files |
| git show $blobid            | shows whole file                                        |
... | view -             # read only vim
git log --oneline -1 $revision
- on vim
:!./script.sh
:map ,t :w\|:!./script.sh<cr>

* editors

- VSCODE
  https://github.com/gitkraken/vscode-gitlens
  https://github.com/DonJayamanne/gitHistoryVSCode

- git-gutter-fringe font
  https://ianyepan.github.io/posts/emacs-git-gutter/

* github.com

- 2022 removed git:// protocol support https://blog.readthedocs.com/github-git-protocol-deprecation/
  #+begin_src
    git:// -> https://
  #+end_src
- Github Action
  https://simonwillison.net/2020/Oct/9/git-scraping/
  https://news.ycombinator.com/item?id=37082289

**  keywords to close issues https://github.blog/2013-01-22-closing-issues-via-commit-messages/

- accept capitalization
- keywords
  - close
  - closes
  - closed
  - fixes
  - fixed

**  marvinpinto/actions - automatic-releases ConventionalCommitTypes

https://github.com/marvinpinto/actions/blob/873de0f4dc68121da64907afaabe332d194eec17/packages/automatic-releases/src/utils.ts#L42
- feat     = Features
- fix      = Bug Fixes
- docs     = Documentation
- style    = Styles
- refactor = Code Refactoring
- perf     = Performance Improvements
- test     = Tests
- build    = Builds
- ci       = Continuous Integration
- chore    = Chores
- revert   = Reverts

**  alternatives

- https://about.gitea.com/ (selfhosted)
- Gitlab
- Bitbucket
- https://gitgud.io/
- https://codeberg.org/
- https://sourcehut.org/
  - aka sr.ht
  - has ci
  - kingcons uses it
  - free while on alpha
  - OS: linux, bsd
    https://man.sr.ht/builds.sr.ht/compatibility.md
